{"version":3,"sources":["components/BowlingGame/Scorecard/FrameBox.scss","components/MemoryGame/constants.js","shared/utils/index.js","components/MemoryGame/utils.js","components/MemoryGame/autoplay.js","actions/memoryGame.js","actions/mainApp.js","actions/bowlingGame.js","constants.js","components/MemoryGame/ScorePanel/calcScore.js","components/MemoryGame/GameControl/GameControl.js","components/MemoryGame/Gameboard/Gameboard.js","shared/components/GameRules/Rules.js","components/MemoryGame/MemoryGame.js","components/MemoryGame/ScorePanel/ScorePanel.js","containers/memory.js","components/BowlingGame/constants.js","components/BowlingGame/utils.js","components/BowlingGame/GameControls/BallRoller.js","components/BowlingGame/GameControls/GameControl.js","components/BowlingGame/Scorecard/FrameBox.js","components/BowlingGame/Scorecard/Scorecard.js","components/BowlingGame/BowlingGame.js","containers/bowling.js","App.js","reducers/memoryReducer.js","reducers/index.js","reducers/bowlingReducer.js","store/index.js","store/memory.js","store/bowling.js","serviceWorker.js","index.js","components/MemoryGame/Gameboard/Gameboard.scss","components/MemoryGame/MemoryGame.scss","components/BowlingGame/GameControls/BallRoller.scss","App.scss","shared/components/GameRules/Rules.scss","components/BowlingGame/GameControls/GameControl.scss","components/MemoryGame/ScorePanel/ScorePanel.scss","components/MemoryGame/GameControl/GameControl.scss","components/BowlingGame/Scorecard/Scorecard.scss","components/BowlingGame/BowlingGame.scss"],"names":["module","exports","frameBox","shadow","tenth","frameNumber","unSelectedBk","markArea","scoreBox","markTenth","mark","totalScore","iconNames","isGameComplete","cards","find","c","isMatched","randomCardArray","length","arr","randomnumber","Math","floor","random","indexOf","randomArray","ICON_COUNT","hasUnmatched","filter","isFlipped","createCards","i","n","push","index","name","exposedClicks","randomCards","clickCard","thisCard","clickCount","flippedCard","undefined","cc","Object","assign","concat","map","clickedCard","exposedMatchedPair","items","forEach","hasOwnProperty","second","first","k","values","p","nextUnexposed","card","arguments","secondCard","firstCard","sc","START_MEMORY_GAME","SHOW_ALL","CLICK_CARD","UNFLIP_ALL","MEMORY_TOGGLE_RULES","MEMORY_AUTOPLAY_MODE","startGame","type","payload","unflipAll","showAll","show","memoryToggleRules","dispatch","getState","s","memoryGame","pause","autoplayMode","setTimeout","mode","timer","clearInterval","setInterval","nextCard","suggestNextCard","SELECT_GAME","selectGame","NEW_BOWLING_GAME","ROLL_BOWLING_BALL","BOWLING_TOGGLE_RULES","newBowlingGame","bowlingToggleRules","rollBowlingBall","availablePins","AvailableGames","calcScore","clickHistory","matches","matchCount","lastMatch","m","remains","includes","luck","level1","level2","level3","level4","maxSeen","max","apply","toConsumableArray","flipCounts","sort","a","b","ma","mb","at","bt","GameControl","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","value","_this","props","history","react_default","createElement","className","styles","memoryGameControls","buttons","text","onClick","appActions","controls","checked","label","style","marginTop","onChange","React","Component","Gameboard","gameBoardContainer","gameBoard","Gameboard_MemoryCard","MemoryCard","showIcon","iconClass","cardIcon","flipped","matched","memoryCard","icon","iconSize","Rules","collapse","isOpen","content","MemoryGame","container","rulesContainer","Rules_Rules","wrap","showRules","gameOver","popover","score","heading","row","title","data","join","ScorePanel","minimal","infoIcon","GameControl_GameControl_GameControl","Gameboard_Gameboard_Gameboard","MemoryGameContainer","connect","state","objectSpread","bindActionCreators","myActions","UNMARKED","Frame","num","frame","rolls","r","complete","setMark","updateFrames","framesToUpdate","roll","frames","slice","thisFrame","currentFrame","addRoll","total","fs","scoreFrame","f","emptyFrames","Array","from","v","f1","f2","f3","nextTwoRolls","nextRoll","NaN","BallRoller","pins","cf","BallRoller_BallRoller","FrameBox","frameClass","isCurrent","scoreBox2","scoreBox3","isNaN","Scorecard","FrameBox_FrameBox","BowlingGame","href","target","rel","GameControls_GameControl_GameControl","Scorecard_Scorecard_Scorecard","BowlingGameContainer","bowlingGame","App","constants","g","Classes","MINIMAL","active","selectedGame","app","navbar","navbarGroup","align","Alignment","LEFT","navbarHeading","navbarDivider","gameSelectionButtons","gameContainer","memory","bowling","App_UnderConstruction","UnderConstruction","constructionContainer","memoryReducer","action","ufc","result","hasChanged","unmatched","gameRoomReducer","initialState","bowlingReducer","Boolean","window","location","hostname","match","ReactDOM","render","es","store","middleware","thunk","createStore","reducer","applyMiddleware","buildStore","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","gameDescription","buttonContainer","pinSelector","pinButton","pinBox","btnContainer","gameControls","frameCount"],"mappings":"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","file":"static/js/main.d7b15ea9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"frameBox\":\"_2os-kn5z2nwszfDhn2gHoF\",\"shadow\":\"KmHrAbb_dUUHU2mSmghPo\",\"tenth\":\"_3yfCHgAngCVSh6U8Tp2For\",\"frameNumber\":\"_1ve3N7DOYqO0Spe00h_bUq\",\"unSelectedBk\":\"_3ZJUWrBP1YWuPjAFCLurTT\",\"markArea\":\"_2dgsSgPoe1wdZGhfUGz2j2\",\"scoreBox\":\"_2cYdaT0sLRIe-HYBlnHRFx\",\"markTenth\":\"_39ntdwckX-c_eM_uLl3iba\",\"mark\":\"_20teK0FZY6iSRd245fF2S_\",\"totalScore\":\"_1DyytT6e_as3_wHGTvBZNz\"};","import React from 'react';\r\n\r\n\r\nexport const iconNames = ['time', 'grid', 'wrench','cog', 'flag','star','airplane','key','globe','dollar','flash','heart'];\r\nexport const ICON_COUNT = 12; \r\n\r\nexport function gameDescription() {\r\n    return (\r\n      <div style={{wrap:'breakWord'}}>\r\n        <ul>\r\n          <li>At the start of the game, the player is presented with 24 facedown cards.</li>\r\n          <li>On the reverse side of every card is an icon. There are twelve unique icons.</li>\r\n          <li>Play begins with the player clicking a card to reveal the icon.</li>\r\n          <li>The player then clicks another card to reveal a second icon.</li>\r\n          <li>If the icons match, the matched cards are grayed.</li>\r\n          <li>If the icons do not match, the cards are turned facedown.</li>\r\n          <li>The game continues until there are no cards left to match.</li>\r\n          <li>Alternatively, play can begin with the cards faceup (using the 'Show All' switch) then turning them facedown after you have memorized the icon positions. </li>\r\n          <li>The object of the game is to match all the icons using the fewest clicks possible.</li>\r\n        </ul>\r\n      </div>);\r\n  };\r\n  \r\n  \r\n  \r\n  ","\r\n// usage to sleep for two seconds: await sleep(2000);  \r\nexport const sleep = (ms) => (new Promise(resolve => setTimeout(resolve, ms)));\r\n\r\nexport async function sleepTest(ms, name = '') { \r\n    console.log(`${name} sleeping for ${ms} milliseconds`);\r\n    await sleep(ms);\r\n    console.log(`${name} awoke`);\r\n}\r\n\r\n// return array of unique numbers between 1 and length (inclusive) in random order\r\nexport const randomArray = (length) => {\r\n    let arr = []\r\n    while(arr.length < length){\r\n        //  +1 here because first value in array is 1, not zero\r\n        var randomnumber = Math.floor(Math.random()*length) + 1;\r\n        if(arr.indexOf(randomnumber) > -1) \r\n          continue;\r\n        arr[arr.length] = randomnumber;\r\n    }\r\n    return arr;\r\n  }\r\n","import {ICON_COUNT, iconNames} from './constants';\r\nimport {randomArray} from '../../shared/utils';\r\n\r\nexport const isGameComplete = (cards) => !cards.find(c => !c.isMatched); \r\nexport const randomCardArray = () => randomArray(ICON_COUNT * 2);\r\nexport const hasUnmatched = (cards) => cards.filter((c) => c.isFlipped && !c.isMatched).length === 2;\r\n\r\n// build the cards array. \r\nexport const createCards = (randomArray) => {\r\n  let cards = [];\r\n  for(let i = 0, n = 0; i < ICON_COUNT; i++){\r\n    cards.push({index:n++, name:iconNames[i], exposedClicks: []});\r\n    cards.push({index:n++, name:iconNames[i], exposedClicks: []});\r\n  }\r\n\r\n  // shuffle the cards based upon the input random array (comes from the function below )\r\n  let randomCards = [];\r\n  for(let i = 0; i < ICON_COUNT * 2; i++){\r\n    randomCards[randomArray[i] - 1] = cards[i];\r\n  }\r\n\r\n  return randomCards;\r\n}\r\n\r\nexport const clickCard = (cards, thisCard, clickCount) => {\r\n\r\n  if (thisCard.isFlipped || thisCard.isMatched || hasUnmatched(cards)) {\r\n    // ignore click if card already turned over or there are two flipped cards already\r\n    return null;\r\n  }\r\n\r\n  // note: prop exposedClicks records how many times this card was exposed before it was matched\r\n\r\n  const flippedCard = cards.find(c => c.isFlipped); // is there another flipped card?\r\n    if(flippedCard === undefined){\r\n      // there is not another face up unmatched card\r\n      // user clicked on the first card when looking for match, turn card face up\r\n      const cc = Object.assign({}, thisCard , {\r\n        exposedClicks : thisCard.exposedClicks.concat(clickCount),\r\n        isFlipped: true, \r\n        isMatched: false});\r\n\r\n      const newCards = cards.map(c => c.index === cc.index ? cc : c);\r\n      return {cards: newCards, clickedCard: cc };\r\n    }\r\n\r\n  if(flippedCard.name === thisCard.name) {\r\n    // user matched the card, set flipped and matched for those 2 matching cards\r\n    const cc = Object.assign({}, thisCard , {\r\n      exposedClicks : thisCard.exposedClicks.concat(clickCount),\r\n      isFlipped: false, \r\n      isMatched: true }) ;\r\n\r\n    const newCards = cards.map(c => c.name !== thisCard.name \r\n        ? c \r\n        : Object.assign({}, c.index === thisCard.index ? cc : c , {isFlipped: false, isMatched: true}));\r\n\r\n    return {cards: newCards, clickedCard: cc };\r\n  }\r\n  \r\n  // turn over the second card (no match)\r\n  const cc = Object.assign({}, thisCard , {\r\n    exposedClicks : thisCard.exposedClicks.concat(clickCount),\r\n    isFlipped: true, \r\n    isMatched: false\r\n  });\r\n\r\n  return {cards: cards.map(c => c.index === cc.index ? cc : c), clickedCard: cc };\r\n}\r\n","// utility functions for autoplay feature\r\nimport {isGameComplete} from './utils'\r\n\r\n\r\nexport const suggestNextCard = (cards) => {\r\n  if(isGameComplete(cards)) {\r\n    return null;\r\n  }\r\n  \r\n  const flippedCard = cards.find(c => c.isFlipped);\r\n  let nextCard = null;\r\n\r\n  if(flippedCard) {\r\n    nextCard = secondCard(cards, flippedCard);\r\n  } else {\r\n    const p = exposedMatchedPair(cards);\r\n    nextCard = p ? p.first : nextUnexposed(cards);\r\n  }\r\n\r\n  return nextCard;\r\n}\r\n \r\nconst exposedMatchedPair = (cards) => {\r\n  // if there are two matching cards that are currently face down, return those two cards\r\n  let items = {};\r\n  cards.forEach(c => {\r\n    if(c.exposedClicks.length > 0 && !c.isMatched) {\r\n      if(items.hasOwnProperty(c.name))\r\n        items[c.name].second = c;\r\n      else {\r\n        items[c.name] = {first: c};\r\n      }\r\n    }\r\n  });\r\n\r\n  // find all unmatched where both cards are previously exposed \r\n  const k = Object.values(items).filter(p => p.second);\r\n  //return the first pair\r\n  return k.length ? k[0] : null;\r\n} \r\n\r\nconst nextUnexposed = (cards, card = null) => {\r\n  // return first card that has not been exposed\r\n  // if card supplied, exclude that card\r\n\r\n  return card \r\n    ? cards.find(c => c.exposedClicks.length === 0 && card.index !== c.index)\r\n    : cards.find(c => c.exposedClicks.length === 0); \r\n} \r\n\r\nconst secondCard = (cards, firstCard) => {\r\n  // if there is a face down match for the firstCard that is previously exposed, return that card\r\n  const sc = cards.filter(c => c.exposedClicks.length > 0 && c.index !== firstCard.index && c.name === firstCard.name);\r\n  return sc.length > 0 ? sc[0] : nextUnexposed(cards, firstCard);\r\n} \r\n","import {randomCardArray, hasUnmatched, isGameComplete} from '../components/MemoryGame/utils';\r\nimport {suggestNextCard} from '../components/MemoryGame/autoplay';\r\n\r\nexport const START_MEMORY_GAME = 'START_MEMORY_GAME';\r\nexport const SHOW_ALL = 'SHOW_ALL';\r\nexport const CLICK_CARD = 'CLICK_CARD';\r\nexport const UNFLIP_ALL = 'UNFLIP_ALL';\r\nexport const MEMORY_TOGGLE_RULES = 'MEMORY_TOGGLE_RULES';\r\nexport const MEMORY_AUTOPLAY_MODE = 'MEMORY_AUTOPLAY_MODE';\r\n\r\nexport const startGame = () => ({type: START_MEMORY_GAME, payload: randomCardArray()});\r\nexport const unflipAll = () => ({type: UNFLIP_ALL});\r\nexport const showAll = (show) => ({type: SHOW_ALL, show});\r\nexport const memoryToggleRules = () => ({type: MEMORY_TOGGLE_RULES});\r\n\r\nexport const clickCard = card => (dispatch, getState) => {\r\n  const s = getState().memoryGame;\r\n  if(s.pause || card.isMatched || card.isFlipped || s.autoplayMode === true) {\r\n    //  ignore clicks when paused or card is already turned over\r\n    return;\r\n  }\r\n\r\n  dispatch({type: CLICK_CARD, payload:card});\r\n  if (getState().memoryGame.pause) {\r\n    //  flip cards back over if unmatched but give user a little time to see they did not match\r\n    setTimeout(() => {\r\n      dispatch(unflipAll());\r\n    }, 700);    \r\n  }\r\n}\r\n\r\nexport const autoplayMode = mode => (dispatch, getState) => {\r\n  dispatch({type: MEMORY_AUTOPLAY_MODE, payload: !getState().memoryGame.autoplayMode});\r\n\r\n  let timer = null;\r\n  clearInterval(timer);\r\n  timer = setInterval(() => \r\n    {\r\n      const s = getState().memoryGame; \r\n      if(isGameComplete(s.cards)) {\r\n        clearInterval(timer);\r\n        dispatch({type: MEMORY_AUTOPLAY_MODE, payload: false});\r\n      }\r\n      else if(!s.autoplayMode) {\r\n        clearInterval(timer);\r\n      } \r\n      else if(hasUnmatched(s.cards)) {\r\n        dispatch(unflipAll());\r\n      } \r\n      else {\r\n        dispatch({type: CLICK_CARD, payload: suggestNextCard(s.cards)});\r\n      }\r\n    }, 200);\r\n}\r\n","export const SELECT_GAME = 'SELECT_GAME';\r\n\r\nexport const selectGame = (name) => ({type: SELECT_GAME, payload: name});\r\n\r\n","export const NEW_BOWLING_GAME = 'NEW_BOWLING_GAME';\r\nexport const ROLL_BOWLING_BALL = 'ROLL_BOWLING_BALL';\r\nexport const BOWLING_TOGGLE_RULES = 'BOWLING_TOGGLE_RULES';\r\n\r\nexport const newBowlingGame = () => ({type: NEW_BOWLING_GAME});\r\nexport const bowlingToggleRules = () => ({type: BOWLING_TOGGLE_RULES});\r\nexport const rollBowlingBall = (availablePins) => ({type: ROLL_BOWLING_BALL, payload: availablePins});\r\n\r\n","\r\nexport const MEMORY_GAME = 'Memory';\r\nexport const BOWLING_GAME = 'Bowling';\r\nexport const MAZE_GAME = 'Maze';\r\n\r\nexport const AvailableGames = process.env.NODE_ENV !== 'production' \r\n    ? [MEMORY_GAME, BOWLING_GAME, MAZE_GAME]\r\n    : [MEMORY_GAME, BOWLING_GAME];\r\n    ","\r\n\r\n//  this methosd is still a work in progress.  usage:  gameScore(state.memoryGame.history)\r\nexport const calcScore = (clickHistory) => {\r\n    if(!clickHistory) {\r\n      return undefined;\r\n    }\r\n\r\n    // compute how well this user performed based upon the click history\r\n  \r\n    let matches = [];\r\n    for(let i = 0; i < clickHistory.length; i++) {\r\n      if(clickHistory[i].isMatched){\r\n        matches.push({\r\n            name: clickHistory[i].name,\r\n            first: clickHistory[i-1].exposedClicks.length, \r\n            second: clickHistory[i].exposedClicks.length,\r\n            matchCount: matches.length\r\n          });\r\n      }\r\n    }\r\n  \r\n    //  last match is easy\r\n    const lastMatch =  matches.filter(m => m.matchCount === 11);  \r\n    let remains = matches.filter(m => !lastMatch.map(p => p.name).includes(m.name));\r\n  \r\n    // count the lucky matches, then remove them\r\n    const luck = remains.filter(m => m.second === 1); \r\n    remains = remains.filter(m => !luck.map(p => p.name).includes(m.name));\r\n  \r\n    // count the perfect matches, then remove them from the scoring\r\n    const level1 = remains.filter(m => m.first <= 2 && m.second <= 2);\r\n     // (m.second === 1 && m.first === 2) || (m.first === 1 && m.second === 2) || (m.first === 2 && m.second === 2));\r\n    remains = remains.filter(m => !level1.map(p => p.name).includes(m.name));\r\n  \r\n    // count near perfect matches, then remove from scoring\r\n    let level2 = remains.filter(m => m.second < 3 || m.first < 3);\r\n    remains = remains.filter(m => !level2.map(p => p.name).includes(m.name));\r\n  \r\n    // count matches where both cards seen a few times\r\n    const level3 = remains.filter(m => m.second <= 3 || m.first <= 3);\r\n  \r\n    // all the rest\r\n    const level4 = remains = remains.filter(m => !level3.map(p => p.name).includes(m.name));\r\n  \r\n    // what is the most times a card was clicked?\r\n    const maxSeen = Math.max(...matches.map(m => m.first), ...matches.map(m => m.second));\r\n  \r\n    // which cards were clicked the most?\r\n    const flipCounts = matches.sort((a, b) => {\r\n      const ma = Math.max(a.first, a.second);\r\n      const mb = Math.max(b.first, b.second);\r\n  \r\n      if (ma === mb ) {\r\n        const at = a.first + a.second;\r\n        const bt = b.first + b.second;\r\n        return  at === bt ? 0 : at < bt ? 1 : -1;\r\n      }\r\n  \r\n      return ma < mb ? 1 : -1;\r\n    });\r\n\r\n  // add the final clicks to level2\r\n    level2 = level2.concat(lastMatch);\r\n    const result = {luck, level1, level2, level3, level4, lastMatch, maxSeen, flipCounts};\r\n  \r\n    return result;\r\n  }\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\nimport { Button, Switch } from \"@blueprintjs/core\";\r\nimport styles from './GameControl.scss';\r\nimport {calcScore} from '../ScorePanel/calcScore.js';\r\n\r\nexport class GameControl extends React.Component {\r\n  render() {\r\n    calcScore(this.props.history);\r\n    return (\r\n      <div className={styles.memoryGameControls}>\r\n        <Button text=\"Restart\" onClick={() => this.props.appActions.startGame()} />\r\n        {`Click Count: ${this.props.clickCount}`}\r\n        <Switch \r\n          checked={this.props.showAll} \r\n          label=\"Show All\" \r\n          style={{marginTop:'6px'}}\r\n          onChange={() => this.props.appActions.showAll()}\r\n        />\r\n         <Switch \r\n          checked={this.props.autoplayMode} \r\n          label=\"Autoplay\" \r\n          style={{marginTop:'6px'}}\r\n          onChange={() => this.props.appActions.autoplayMode()}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGameControl.propTypes = {\r\n  showAll: PropTypes.bool,\r\n  clickCount: PropTypes.number,\r\n  autoplayMode: PropTypes.bool,\r\n  startGame: PropTypes.func\r\n};\r\n\r\nexport default GameControl;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\nimport { Icon } from \"@blueprintjs/core\";\r\nimport styles from './Gameboard.scss';\r\n\r\nexport class Gameboard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.gameBoardContainer}>\r\n          <div className={styles.gameBoard}>\r\n          {(this.props.cards || []).map(card => (\r\n            <MemoryCard \r\n              key={card.index}\r\n              showAll={this.props.showAll}\r\n              onClick={ ()=> this.props.appActions.clickCard(card)} \r\n              {...card} /> \r\n          ))}\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst MemoryCard = (props) => {\r\n  const showIcon = props.isMatched || props.isFlipped || props.showAll;\r\n  const iconClass = `${styles.cardIcon} ${props.isFlipped ? styles.flipped : props.isMatched ? styles.matched : ''}`;\r\n\r\n  return (\r\n    <div className={styles.memoryCard} onClick={props.onClick}>\r\n      {showIcon &&\r\n        <div className={iconClass} >\r\n          <Icon icon={props.name}  iconSize={'calc(8vmin)'}  />\r\n        </div>\r\n      }\r\n    </div>\r\n    )\r\n};\r\n\r\nGameboard.propTypes = {\r\n  cards: PropTypes.array,\r\n  showAll: PropTypes.bool\r\n};\r\n\r\nexport default Gameboard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\nimport { Button, Collapse } from \"@blueprintjs/core\";\r\nimport * as styles from './Rules.scss';\r\n\r\nexport class Rules extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.btnContainer}>\r\n          <Button onClick={this.props.onClick}>\r\n            {this.props.show ? \"Hide\" : \"Show\"} Rules\r\n          </Button>\r\n        </div>\r\n        <Collapse isOpen={this.props.show}>\r\n          <div className={styles.content}>{this.props.content}</div>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRules.propTypes ={\r\n  show: PropTypes.bool,\r\n  content: PropTypes.any,\r\n  onClick: PropTypes.func\r\n}\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\nimport { Icon, Popover } from \"@blueprintjs/core\";\r\n\r\nimport {gameDescription} from './constants';\r\nimport {GameControl} from './GameControl/GameControl';\r\nimport {Gameboard} from './Gameboard/Gameboard';\r\nimport styles from './MemoryGame.scss';\r\nimport {Rules} from '../../shared/components/GameRules/Rules.js';\r\nimport {isGameComplete} from './utils';\r\nimport {ScorePanel} from './ScorePanel/ScorePanel.js'\r\n\r\nexport class MemoryGame extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.container} >\r\n        <div className={styles.rulesContainer}>\r\n          <Rules content={gameDescription()} show={this.props.showRules} onClick={() => this.props.appActions.memoryToggleRules()}/>   \r\n        </div>\r\n        {  isGameComplete(this.props.cards)  &&\r\n        <div className={styles.gameOver} >\r\n          <div>GAME OVER!</div>\r\n          <Popover content={ScorePanel(this.props.history)} minimal >\r\n            <Icon icon=\"info-sign\"  iconSize={'calc(.65em)'} className={styles.infoIcon} />\r\n          </Popover>\r\n        </div>\r\n        }\r\n        <GameControl {...this.props} />\r\n        <Gameboard {...this.props} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMemoryGame.propTypes = {\r\n  showAll: PropTypes.bool,\r\n  cards: PropTypes.array,\r\n  onClick: PropTypes.func,\r\n  unflipAll: PropTypes.func,\r\n  autoplayMode: PropTypes.bool,\r\n  showRules: PropTypes.bool,\r\n  memoryToggleRules: PropTypes.func\r\n};\r\n\r\nexport default MemoryGame;\r\n","import React from 'react';\r\n\r\nimport styles from './ScorePanel.scss';\r\nimport {calcScore} from './calcScore'\r\n\r\nexport const ScorePanel = (clickHistory) => {\r\n  const score = calcScore(clickHistory);\r\n\r\n  return (\r\n    <div className={styles.container} >\r\n      <div className={styles.heading}>Click Efficiency</div>\r\n      <div className={styles.items}>\r\n        <div className={styles.row}>\r\n          <div className={styles.title}>Excellent</div>\r\n          <div className={styles.data}>{`${score.level1.map(c => c.name).join(', ')}`}</div>\r\n        </div>\r\n        <div className={styles.row}>\r\n          <div className={styles.title}>Good</div>\r\n          <div className={styles.data}>{`${score.level2.map(c => c.name).join(', ')}`}</div>\r\n        </div>\r\n        <div className={styles.row}>\r\n          <div className={styles.title}>Poor</div>\r\n          <div className={styles.data}>{`${score.level3.map(c => c.name).join(', ')}`}</div>\r\n        </div>\r\n        { score.level4.length > 0 &&\r\n          <div className={styles.row}>\r\n            <div className={styles.title}>Very Poor</div>\r\n            <div className={styles.data}>{`${score.level4.map(c => c.name).join(', ')}`}</div>\r\n          </div>\r\n        }\r\n        <div className={styles.row}>\r\n          <div className={styles.title}>Lucky</div>\r\n          <div className={styles.data}>{`${score.luck.map(c => c.name).join(', ')}`}</div> \r\n        </div>\r\n        <div className={styles.row}>\r\n          <div className={styles.title}>Max Clicks</div>\r\n          <div className={styles.data}>{`${score.maxSeen > 0 ? score.maxSeen : '' }`}</div> \r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n};","\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport * as myActions from \"../actions/memoryGame.js\";\r\nimport {MemoryGame} from \"../components/MemoryGame/MemoryGame\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n      ...state.memoryGame\r\n    };\r\n  }\r\n  \r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      appActions: bindActionCreators(myActions, dispatch)\r\n    };\r\n  }\r\n\r\n\r\n  \r\nconst MemoryGameContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(MemoryGame)\r\n  \r\n  export default MemoryGameContainer;\r\n  \r\n  \r\n  ","import React from 'react';\r\n\r\nexport const SPARE = 1;\r\nexport const STRIKE = 2;\r\nexport const UNMARKED = 0;\r\nexport const TENTH_FRAME = 9;\r\nexport const NINETH_FRAME = 8;\r\n\r\nexport function gameDescription() {\r\n    return (\r\n      <div>\r\n        <ul>\r\n          <li>\r\n            <a href=\"https://www.bowl.com/Welcome/Welcome_Home/Keeping_Score\" target=\"_blank\" rel=\"noopener noreferrer\">How to score</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"https://www.pba.com/Resources/Bowling101\" target=\"_blank\" rel=\"noopener noreferrer\">Rules of bowling</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n}\r\n","\r\nimport {UNMARKED, TENTH_FRAME, NINETH_FRAME, STRIKE, SPARE} from './constants.js';\r\n\r\nconst STRIKE_CHAR = 'X';\r\nconst SPARE_CHAR = '/';\r\nconst GUTTERBALL_CHAR = '-';\r\n\r\n\r\n// Frame class represents a single frame as displayed on the bowling scorecard\r\n// There will be ten of these per game\r\nexport class Frame {\r\n  constructor(num){\r\n    this.frame = num;\r\n    this.rolls = [];\r\n    this.mark = UNMARKED;\r\n  }\r\n  \r\n  addRoll(r) {\r\n    if(!this.complete) {\r\n      this.rolls.push(r);\r\n      this.setMark();  \r\n      \r\n      this.complete = this.frame === TENTH_FRAME && this.mark !== UNMARKED\r\n        ? this.rolls.length === 3\r\n        : this.mark === STRIKE || this.rolls.length === 2; \r\n    }\r\n  }\r\n  \r\n   // mark based on first two rolls.  \r\n   setMark() {\r\n     this.mark = this.rolls[0] === 10\r\n      ? STRIKE\r\n      : this.rolls[0] + this.rolls[1] === 10 ? SPARE : UNMARKED;\r\n   }\r\n}\r\n\r\n\r\nexport const updateFrames = (framesToUpdate, roll) => {\r\n  let frames = framesToUpdate.slice();\r\n  let thisFrame = currentFrame(frames);\r\n  if(thisFrame) {\r\n    thisFrame.addRoll(roll);\r\n  }\r\n \r\n  let total = 0;\r\n  for(let i = 0; i < 10; i++){\r\n    const fs = scoreFrame(frames[i],frames[i+1],frames[i+2]);\r\n    frames[i].score = fs;\r\n    total += fs;\r\n    frames[i].totalScore = total;\r\n  //  console.log(`count: ${i}, score:${fs}, total:${total}`, frames[i]);\r\n  }\r\n\r\n  return frames;\r\n}         \r\n\r\n\r\nexport const currentFrame = (frames) => (frames || []).find(f => !f.complete);\r\n\r\nexport const currentScore = (frames) => {\r\n  const f = frames.reverse().find(f => f.complete);\r\n  return f ? f.totalScore : frames[0].totalScore;\r\n} \r\n\r\nexport const emptyFrames = () => Array.from({length: 10}, (v, k) => new Frame(k++));\r\n\r\nexport const isGameComplete = (frames) => (frames || []).length && frames[TENTH_FRAME].complete === true;\r\n\r\n\r\nexport const scoreBox1 = (frame) => {\r\n  if(frame.frame === TENTH_FRAME && frame.rolls.length > 0) {\r\n    return frame.mark === STRIKE ? STRIKE_CHAR : frame.rolls[0] === 0 ? GUTTERBALL_CHAR : frame.rolls[0];\r\n  }\r\n\r\n  return '';\r\n}\r\n\r\nexport const scoreBox2 = (frame) => {\r\n  if(frame.rolls.length === 0)\r\n    return '';\r\n\r\n  if(frame.frame === TENTH_FRAME){\r\n   return frame.mark === SPARE ? SPARE_CHAR \r\n    : frame.rolls[1] === 10 ? STRIKE_CHAR \r\n    : frame.rolls[1] === 0  ? GUTTERBALL_CHAR \r\n    : frame.rolls[1]; \r\n  } else {\r\n    return frame.mark === STRIKE ? STRIKE_CHAR : frame.rolls[0] === 0 ? GUTTERBALL_CHAR : frame.rolls[0];\r\n  }\r\n}\r\n\r\nexport const scoreBox3 = (frame) => {\r\n  if(frame.rolls.length === 0)\r\n    return '';\r\n  \r\n  if(frame.frame === TENTH_FRAME) {\r\n    switch(frame.mark) {\r\n      default:\r\n        return '';\r\n      case STRIKE:\r\n        return frame.rolls[2] === 10 ? STRIKE_CHAR \r\n        : frame.rolls[1] + frame.rolls[2] === 10 ? SPARE_CHAR \r\n        : frame.rolls[2] === 0 ? GUTTERBALL_CHAR : frame.rolls[2];\r\n      case SPARE:\r\n        return frame.rolls[2] === 10 ? STRIKE_CHAR : frame.rolls[2] ;\r\n    }\r\n  } else {   \r\n    switch(frame.mark) {\r\n      default:\r\n        return frame.rolls[1] === 0 ? GUTTERBALL_CHAR : frame.rolls[1];\r\n      case STRIKE:\r\n        return '';\r\n      case SPARE:\r\n        return SPARE_CHAR;\r\n    }\r\n  }\r\n}\r\n\r\n// how many pins to display?\r\nexport const availablePins = (frame) => {\r\n  if(!frame)\r\n    return 0;\r\n\r\n  if(frame.rolls.length === 0)\r\n    return 10;\r\n  \r\n  if(frame.frame === TENTH_FRAME){\r\n    if(frame.rolls.length === 1) {\r\n      return frame.rolls[0] === 10 ? 10 : 10 - frame.rolls[0];\r\n    }\r\n    \r\n    // possible third roll in 10th frame\r\n    return frame.mark === STRIKE \r\n      ? frame.rolls[1] === 10 ? 10 : 10 - frame.rolls[1]\r\n      : frame.mark === SPARE ? 10 : null; \r\n  }\r\n  \r\n  return 10 - frame.rolls[0];\r\n}\r\n\r\n//  return the score from next two rolls when users rolls a strike\r\nconst nextTwoRolls = (f1, f2, f3) => {\r\n  if(f1.frame === TENTH_FRAME) {\r\n    return f1.rolls[1] + f1.rolls[2];\r\n  }\r\n  \r\n  if(f1.frame === NINETH_FRAME) {\r\n      // next to last frame\r\n    if(f2.mark === STRIKE) {\r\n      //  strike in last frame\r\n      return 10 + f2.rolls[1];\r\n    }\r\n    \r\n    return f2.rolls[0] + f2.rolls[1];\r\n  }\r\n  \r\n  if(f2.mark === STRIKE) {\r\n    return f3 ? 10 + f3.rolls[0] : 0;\r\n  }\r\n  \r\n  return f2.rolls[0] + f2.rolls[1];\r\n}\r\n\r\n//  return the score from next roll when user rolls a spare\r\nconst nextRoll = (f1, f2) => {\r\n  if(f1.frame === TENTH_FRAME) {\r\n      // last frame\r\n    return f1.rolls[2];\r\n  }\r\n  \r\n  return f2 && f2.rolls.length > 0 ? f2.rolls[0] : undefined; \r\n}\r\n\r\n//  return the score of frame f1\r\nconst scoreFrame = (f1, f2, f3) => {\r\n  if(f1.complete) {\r\n    switch(f1.mark) {\r\n      case STRIKE:\r\n        //  we rolled a strike\r\n        return 10 + nextTwoRolls(f1, f2, f3);\r\n      case SPARE:\r\n        //  we rolled a spare  \r\n        return 10 + nextRoll(f1,f2);\r\n      default:\r\n        return f1.rolls[0] + f1.rolls[1];\r\n    }  \r\n  }\r\n\r\n  return NaN;\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\nimport { Button } from \"@blueprintjs/core\";\r\n\r\nimport * as styles from './BallRoller.scss';\r\nimport {availablePins} from '../utils.js';\r\n\r\nexport const BallRoller = (props) => {\r\n  const frame = props.frame;\r\n  const pins = Array.from({length: availablePins(frame) + 1}, (v, k) => k++)\r\n              .map(p => <Button className={styles.pinButton}\r\n                    text={p} \r\n                    key={p} \r\n                    onClick={() => props.appActions.rollBowlingBall(p)} \r\n                  /> );\r\n\r\n  return (\r\n    <div className={styles.buttonContainer}>\r\n      <div className={styles.pinSelector}>\r\n        {'Click the number of pins to knock down'}\r\n      </div> \r\n      <div className={styles.pinBox} >\r\n        {pins}\r\n      </div>\r\n    </div>\r\n    )\r\n  };\r\n\r\n  BallRoller.propTypes = {\r\n    frame: PropTypes.object,\r\n    rollBowlingBall: PropTypes.func\r\n  }\r\n\r\nexport default BallRoller;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\nimport {BallRoller} from './BallRoller';\r\nimport { Button } from \"@blueprintjs/core\";\r\nimport * as styles from './GameControl.scss';\r\nimport {isGameComplete, currentFrame } from '../utils.js';\r\n\r\nexport const GameControl = (props) => {\r\n  const gameOver = isGameComplete(props.frames);\r\n  const cf = currentFrame(props.frames);\r\n\r\n  return (\r\n    <div className={styles.gameControls}>\r\n      { gameOver &&\r\n        <div className={styles.gameOver}>\r\n          GAME OVER!\r\n        </div>\r\n      }\r\n      { !gameOver &&\r\n        <BallRoller frame={cf} {...props} />\r\n      }\r\n      { !gameOver && \r\n        <div className={styles.frameCount}>\r\n          {`Frame ${cf.frame + 1}, Ball ${cf.rolls.length + 1}  `}   \r\n        </div>\r\n      }\r\n      <Button text=\"Restart\" onClick={() => props.appActions.newBowlingGame()} />\r\n    </div>\r\n  )\r\n}\r\n\r\nGameControl.propTypes = {\r\n  frames: PropTypes.array,\r\n  rollBowlingBall: PropTypes.func,\r\n  newBowlingGame: PropTypes.func\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\nimport * as styles from './FrameBox.scss';\r\nimport {TENTH_FRAME} from '../constants.js';\r\nimport {scoreBox1, scoreBox2, scoreBox3} from '../utils.js';\r\n\r\nexport const FrameBox = (props) => {\r\n  const frameClass = `${styles.frameBox} ${props.frame === TENTH_FRAME ? styles.tenth : ''}  ${props.isCurrent ? styles.shadow : ''}`;\r\n    return ( \r\n      <div className={frameClass} >\r\n        <div className={`${styles.frameNumber} ${!props.isCurrent ? styles.unSelectedBk : ''}`}>\r\n          {props.frame + 1}\r\n        </div>    \r\n        <div className={styles.markArea}>\r\n          <div className={`${styles.scoreBox} ${props.frame === TENTH_FRAME ? styles.markTenth : ''}`} >\r\n            {scoreBox1(props)} \r\n          </div>\r\n          <div className={`${styles.scoreBox} ${styles.mark}`}>\r\n            {scoreBox2(props)} \r\n          </div>\r\n          <div className={`${styles.scoreBox} ${styles.mark}`}>\r\n            {scoreBox3(props)} \r\n          </div>\r\n        </div>\r\n      <div className={styles.totalScore}>\r\n        {!props.complete || isNaN(props.totalScore) ? '' : props.totalScore}\r\n      </div>\r\n    </div>\r\n  )};\r\n\r\n  FrameBox.propTypes = {\r\n    isCurrent: PropTypes.bool,\r\n    complete: PropTypes.bool,\r\n    totalScore: PropTypes.number,\r\n    frame: PropTypes.number\r\n  }\r\n\r\nexport default FrameBox;\r\n  \r\n\r\n  ","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\nimport {FrameBox} from './FrameBox';\r\nimport {currentFrame } from '../utils.js';\r\nimport * as styles from './Scorecard.scss';\r\n\r\nexport const Scorecard = (props) => {\r\n  const cf = currentFrame(props.frames);\r\n  return (\r\n    <div className={styles.gameBoardContainer}>\r\n    {\r\n      (props.frames || []).map(f => (\r\n        <FrameBox key={f.frame} isCurrent={cf && cf.frame === f.frame} {...f} /> \r\n      ))\r\n    }\r\n  </div>\r\n  )\r\n};\r\n\r\nScorecard.propTypes = {\r\n  frames: PropTypes.array,\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\nimport {gameDescription} from './constants';\r\nimport {GameControl} from './GameControls/GameControl';\r\nimport {Scorecard} from './Scorecard/Scorecard';\r\nimport {Rules} from '../../shared/components/GameRules/Rules.js';\r\nimport * as styles from './BowlingGame.scss';\r\n\r\nexport class BowlingGame extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.container}>\r\n        <Rules \r\n          content={gameDescription()} \r\n          show={this.props.showRules} \r\n          onClick={() => this.props.appActions.bowlingToggleRules()}\r\n        />\r\n        <GameControl {...this.props} />\r\n        <Scorecard {...this.props} /> \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nBowlingGame.propTypes = {\r\n  frames: PropTypes.array,\r\n  rollBowlingBall: PropTypes.func,\r\n  newBowlingGame: PropTypes.func,\r\n  bowlingToggleRules: PropTypes.func\r\n}\r\n\r\nexport default BowlingGame;\r\n","\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport * as myActions from \"../actions/bowlingGame.js\";\r\nimport {BowlingGame} from \"../components/BowlingGame/BowlingGame\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n      ...state.bowlingGame\r\n    };\r\n  }\r\n  \r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      appActions: bindActionCreators(myActions, dispatch)\r\n    };\r\n  }\r\n\r\n\r\n  \r\nconst BowlingGameContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(BowlingGame)\r\n  \r\n  export default BowlingGameContainer;\r\n  \r\n  \r\n  ","import React, { Component } from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from 'prop-types'; \r\nimport { Button } from \"@blueprintjs/core\";\r\n\r\nimport * as myActions from \"./actions/index\";\r\nimport { Alignment, Classes, Navbar, NavbarDivider,  NavbarGroup,  NavbarHeading} from \"@blueprintjs/core\";\r\nimport styles from './App.scss';\r\nimport * as constants from './constants.js';\r\nimport MemoryGameContainer from './containers/memory.js';\r\nimport BowlingGameContainer from './containers/bowling.js';\r\n\r\nclass App extends Component {\r\n  gameSelectionButtons() {\r\n    return (\r\n      <div> \r\n      {\r\n        constants.AvailableGames.map(g => (\r\n          <Button \r\n            key={g}\r\n            className={Classes.MINIMAL} \r\n            active={this.props.selectedGame === g}\r\n            text={g} \r\n            onClick={()=> this.props.appActions.selectGame(g)} />\r\n        ))\r\n      }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.app}>\r\n    \r\n        <Navbar>\r\n          <NavbarGroup align={Alignment.LEFT}>\r\n            <NavbarHeading>Game Room</NavbarHeading>\r\n            <NavbarDivider />\r\n            {this.gameSelectionButtons()}\r\n          </NavbarGroup>\r\n        </Navbar>\r\n        <div className={styles.gameContainer}>\r\n          {this.props.selectedGame === constants.MEMORY_GAME &&\r\n            <MemoryGameContainer />\r\n          }\r\n          {this.props.selectedGame === constants.BOWLING_GAME &&\r\n            <BowlingGameContainer />\r\n          }\r\n          {this.props.selectedGame === constants.MAZE_GAME &&\r\n            <UnderConstruction text={`${this.props.selectedGame} is under construction`} />\r\n          } \r\n        </div>   \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst UnderConstruction = (props) => (\r\n  <div className={styles.constructionContainer}>\r\n   {props.text}\r\n  </div>\r\n);\r\n\r\nApp.propTypes = {\r\n  selectedGame: PropTypes.string\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectedGame: state.selectedGame\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    appActions: bindActionCreators(myActions, dispatch)\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n  )(App);\r\n\r\n","import {SHOW_ALL, CLICK_CARD, UNFLIP_ALL, START_MEMORY_GAME, MEMORY_TOGGLE_RULES, MEMORY_AUTOPLAY_MODE} from \"../actions/index\";\r\nimport {createCards, clickCard, hasUnmatched} from '../components/MemoryGame/utils';\r\n\r\n\r\n  export function memoryReducer(state, action) {\r\n    switch(action.type) {\r\n      case START_MEMORY_GAME:\r\n        return Object.assign({}, state, {cards: createCards(action.payload), clickCount: 0, pause: false, history: [] }); \r\n      case UNFLIP_ALL:\r\n        const ufc = state.cards.map(c => c.isFlipped ? Object.assign({}, c , {isFlipped: false}) : c);\r\n        return  Object.assign({}, state, {cards: ufc, pause: false });\r\n      case CLICK_CARD:\r\n        const clickedCard = action.payload;\r\n        const clickCount = state.clickCount + 1;\r\n        const result = clickCard(state.cards, clickedCard, clickCount);\r\n        if(result === null) {\r\n          return state;\r\n        }\r\n\r\n        const hasChanged = (result.cards || []).length !== 0;\r\n        const unmatched = hasUnmatched(result.cards);\r\n        return !hasChanged ? state : Object.assign({}, state, \r\n          {\r\n            cards: result.cards, \r\n            clickCount,\r\n            pause: unmatched,\r\n            history: state.history.concat(result.clickedCard)\r\n          });\r\n      case SHOW_ALL:\r\n        return Object.assign({}, state, {showAll: !state.showAll});\r\n      case MEMORY_AUTOPLAY_MODE:\r\n        return Object.assign({}, state, {autoplayMode: action.payload, pause: false});\r\n      case MEMORY_TOGGLE_RULES:\r\n        return Object.assign({}, state, {showRules: !state.showRules});\r\n      default: \r\n        return state;\r\n    }\r\n  }\r\n  \r\n  export default memoryReducer;\r\n","import {initialState} from '../store';\r\nimport { bowlingReducer } from \"./bowlingReducer\";\r\nimport { memoryReducer } from \"./memoryReducer\";\r\nimport {SELECT_GAME} from \"../actions/index\";\r\n\r\n  export function gameRoomReducer(state = initialState, action) {\r\n    return {\r\n      memoryGame: memoryReducer(state.memoryGame, action),\r\n      bowlingGame: bowlingReducer(state.bowlingGame, action),\r\n      selectedGame: action.type === SELECT_GAME ? action.payload : state.selectedGame\r\n    }\r\n  }\r\n  \r\n  export default gameRoomReducer;\r\n","import {ROLL_BOWLING_BALL, NEW_BOWLING_GAME, BOWLING_TOGGLE_RULES} from \"../actions/index\";\r\nimport {updateFrames, emptyFrames} from '../components/BowlingGame/utils';\r\n\r\nexport function bowlingReducer(state, action) {\r\n  switch(action.type) {\r\n    case NEW_BOWLING_GAME:\r\n      return  Object.assign({}, state, {frames: emptyFrames()});\r\n    case ROLL_BOWLING_BALL:\r\n      return  Object.assign({}, state, {frames: updateFrames(state.frames, action.payload) });\r\n    case BOWLING_TOGGLE_RULES:\r\n      return Object.assign({}, state, {showRules: !state.showRules});\r\n    default:\r\n      return state;\r\n  }\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\n\r\nimport * as memoryGame from './memory';\r\nimport * as bowlingGame from './bowling';\r\nimport * as appConstants from '../constants';\r\n\r\nimport reducer from \"../reducers\";\r\n\r\nexport const initialState = {\r\n    selectedGame: appConstants.MEMORY_GAME,\r\n    memoryGame: memoryGame.init(),\r\n    bowlingGame: bowlingGame.init()\r\n  };\r\n\r\nexport const buildStore = () => {\r\n  let middleware = [thunk];\r\n\r\n  // turn off the noise here\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    middleware.push(createLogger())\r\n  }\r\n\r\n  return createStore(reducer,  applyMiddleware(...middleware));\r\n}","import {createCards, randomCardArray} from '../components/MemoryGame/utils';\r\n\r\nexport const init = () => (\r\n    { \r\n        showAll:false, \r\n        cards: createCards(randomCardArray()), \r\n        clickCount: 0, \r\n        pause: false, \r\n        showRules: true,\r\n        history: [],\r\n        autoplayMode: false\r\n    });","import {emptyFrames} from '../components/BowlingGame/utils';\r\n\r\nexport const init = () => ({ frames: emptyFrames(), showRules: false});","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport { buildStore } from './store'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Provider store={buildStore()}>\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n  );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_3U9sRVazvqFeSLOOQ17k_f\",\"gameBoard\":\"OYtnOVEFBwBsvZPmUE4yU\",\"gameBoardContainer\":\"_2pCeM4upCPJm-A2pGiZF9a\",\"gameOver\":\"_2NFMAkZHZQuYA1TJhfaj90\",\"gameDescription\":\"_1t-pvN5rqY4CQH5_aRw980\",\"memoryGameControls\":\"_201wmWW0n-FaOFOnUanydX\",\"memoryCard\":\"_13UPxVRzAGYcrNiHJB-a3n\",\"flipped\":\"_2qeCsNhrPjZdKDfSyd-qG0\",\"matched\":\"s8vUgpOz1bXkhDMETj9D9\",\"cardIcon\":\"_25ZIyRAmlS-AR4mbhPVRT7\",\"rulesContainer\":\"_2ReyZAt9AO3tUCw1K3vh5_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2RK5XsQVaftRMrPw7w8lt8\",\"gameBoard\":\"_2u5AvPbyjBL2rF3Gmxzbwu\",\"gameBoardContainer\":\"_1a7InEzNh1KEvrfJH-0B0U\",\"gameOver\":\"_1PdXWdxlNA1XPaFOeEzfHW\",\"gameDescription\":\"_1WqQzen-4MDGC_-ExjFWNm\",\"memoryGameControls\":\"_18c6mgsvHUO71ixP9De5Ld\",\"memoryCard\":\"_2Vv87KuIWYpn8ism0Lb2l0\",\"flipped\":\"_1Tt6i4GWAZjhLcIkHlApLY\",\"matched\":\"_3TqVz0bWw-CpUy79J658uq\",\"cardIcon\":\"_2V0eVus6tVUoxqNVenBwF6\",\"rulesContainer\":\"qb5ZeD3Q-XXr6wHgpcTba\",\"infoIcon\":\"_2g2GF-qu-ss5anvEBGGBO8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"_3mfDwf5T21h3S5gOd-A5l2\",\"pinSelector\":\"_2QzNo79U25GUvmzyZsuB2P\",\"pinButton\":\"_1AcMG_bzWqtzQRWvYoiQpx\",\"pinBox\":\"_2Yd0J5JPAqeI4CPUzmgSJl\",\"title\":\"_4RYrzRm7UiRt4Nboe_0c0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"_2XyUai4Nbw7tWe8ybs2pDF\",\"constructionContainer\":\"_3GqH5aLha_kCKzIRjcZiVA\",\"gameContainer\":\"_31H6O7fy05qgotoqEJLrrC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"D7m4GwtlvaAd04POFe6JG\",\"content\":\"N7nEOT7wo61GylvCV2kuR\",\"heading\":\"_2HAKb6gQzcfLw0W4CDzDbl\",\"btnContainer\":\"_3qhiY2VXNbcFb8uYQPS8Kl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameControls\":\"_2cyE19f_O9jItA66AnJnTV\",\"gameOver\":\"HVC137GIAHHlAAxMhdqIX\",\"frameCount\":\"_1zOUMqv9j6aMSOtKpymG7Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2N_047lwZK0Ygpe3gWRWNi\",\"heading\":\"_1F-rGOPHUxRmDR2oHAxZ_E\",\"items\":\"_3ei9w944mB2nDxC2bjfiLm\",\"row\":\"_39t8_CaNsv34vcAPjp_l-g\",\"title\":\"_1SsucuRagTV9x6Vwj1BLds\",\"data\":\"_3K9iCJD5cK4r8h-J7yyHYK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2RoUgFISHMFtUCP9H1glFr\",\"gameBoard\":\"_1A5Cb_KoVQRCJjRXrhTFzu\",\"gameBoardContainer\":\"_2hIxkAT9JfeggUayDXes5u\",\"gameOver\":\"_3NeLxIyiFJcp8TpJC5z0j5\",\"gameDescription\":\"_3whclwrn7X5vz_IBMO5h8o\",\"memoryGameControls\":\"_1mEabh8ffvJrwwEzZxbhd1\",\"memoryCard\":\"_1CB5WmOqTOopOGHvTGfmWl\",\"flipped\":\"UkihyDmN55OeJTBMcRXSk\",\"matched\":\"_3ZvXu7hbKgBPm1isjRaIRV\",\"cardIcon\":\"DKpncEJmya2-kvnKTttqq\",\"rulesContainer\":\"_2H6015BAtyOstDK3W25thW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameBoardContainer\":\"_2lkia-blKM_HxgDTNlrPSJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_2qLE2mJclH2Hkc4jr2uo-T\"};"],"sourceRoot":""}
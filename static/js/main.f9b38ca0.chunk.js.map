{"version":3,"sources":["components/BowlingGame/BallRoller.scss","components/BowlingGame/BowlingGame.scss","App.scss","components/BowlingGame/FrameBox.scss","components/MemoryGame/constants.js","components/MemoryGame/utils.js","actions/memoryGame.js","actions/mainApp.js","actions/bowlingGame.js","constants.js","components/MemoryGame/MemoryGame.js","containers/memory.js","components/BowlingGame/constants.js","components/BowlingGame/utils.js","components/BowlingGame/FrameBox.js","components/BowlingGame/BallRoller.js","components/BowlingGame/BowlingGame.js","containers/bowling.js","App.js","reducers/memoryReducer.js","reducers/index.js","reducers/bowlingReducer.js","store/index.js","store/memory.js","store/bowling.js","serviceWorker.js","index.js","components/MemoryGame/MemoryGame.scss"],"names":["module","exports","gameOver","frameBox","buttonContainer","pinSelector","title","gameContainer","gameBoardContainer","gameDescription","gameControls","app","constructionContainer","shadow","tenth","frameNumber","unSelectedBk","markArea","scoreBox","markTenth","mark","totalScore","iconNames","createCards","randomArray","cards","i","n","push","index","name","randomCards","ICON_COUNT","randomCardArray","length","arr","randomnumber","Math","floor","random","indexOf","clickCard","card","isFlipped","isMatched","hasUnmatched","flippedCard","find","c","undefined","map","Object","assign","filter","START_MEMORY_GAME","SHOW_ALL","CLICK_CARD","UNFLIP_ALL","startGame","type","payload","unflipAll","showAll","show","dispatch","getState","memoryGame","pause","setTimeout","SELECT_GAME","selectGame","NEW_BOWLING_GAME","ROLL_BOWLING_BALL","newBowlingGame","rollBowlingBall","availablePins","AvailableGames","MemoryGame","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","isGameOver","props","react_default","a","createElement","className","styles","memoryGameContainer","memoryGameControls","buttons","text","onClick","appActions","concat","clickCount","controls","checked","label","style","marginTop","onChange","gameBoard","MemoryGame_MemoryCard","React","Component","MemoryCard","showIcon","iconClass","cardIcon","flipped","matched","memoryCard","icon","iconSize","MemoryGameContainer","connect","state","objectSpread","bindActionCreators","myActions","UNMARKED","Frame","num","frame","rolls","r","complete","setMark","updateFrames","framesToUpdate","roll","frames","slice","thisFrame","currentFrame","addRoll","total","fs","scoreFrame","score","f","emptyFrames","Array","from","v","k","f1","f2","f3","nextTwoRolls","nextRoll","NaN","FrameBox","frameClass","isCurrent","scoreBox2","scoreBox3","isNaN","BallRoller","pins","p","BowlingGame","isGameComplete","cf","href","target","rel","BallRoller_BallRoller","buildFrameDisplay","FrameBox_FrameBox","BowlingGameContainer","bowlingGame","App","constants","g","Classes","MINIMAL","active","selectedGame","navbar","navbarGroup","align","Alignment","LEFT","navbarHeading","navbarDivider","gameSelectionButtons","memory","bowling","App_UnderConstruction","UnderConstruction","memoryReducer","action","ufc","newCards","hasChanged","unmatched","gameRoomReducer","initialState","bowlingReducer","Boolean","window","location","hostname","match","ReactDOM","render","es","store","middleware","thunk","createStore","reducer","applyMiddleware","buildStore","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,SAAA,0BAAAC,SAAA,wBAAAC,gBAAA,wBAAAC,YAAA,0BAAAC,MAAA,+CCAlBN,EAAAC,QAAA,CAAkBM,cAAA,wBAAAC,mBAAA,0BAAAC,gBAAA,0BAAAC,aAAA,6CCAlBV,EAAAC,QAAA,CAAkBU,IAAA,0BAAAC,sBAAA,0BAAAL,cAAA,uGCAlBP,EAAAC,QAAA,CAAkBE,SAAA,0BAAAU,OAAA,0BAAAC,MAAA,wBAAAC,YAAA,0BAAAC,aAAA,wBAAAC,SAAA,0BAAAC,SAAA,0BAAAC,UAAA,0BAAAC,KAAA,0BAAAC,WAAA,ozCCELC,EAAY,CAAC,OAAQ,OAAQ,SAAS,MAAO,OAAO,OAAO,WAAW,MAAM,QAAQ,SAAS,QAAQ,SCA3G,IAAMC,EAAc,SAACC,GAE1B,IADA,IAAIC,EAAQ,GACJC,EAAI,EAAGC,EAAI,EAAGD,EDDE,GCCcA,IACpCD,EAAMG,KAAK,CAACC,MAAMF,IAAKG,KAAKR,EAAUI,KACtCD,EAAMG,KAAK,CAACC,MAAMF,IAAKG,KAAKR,EAAUI,KAKxC,IADA,IAAIK,EAAc,GACVL,EAAI,EAAGA,EAAIM,GAAgBN,IACjCK,EAAYP,EAAYE,GAAK,GAAKD,EAAMC,GAG1C,OAAOK,GAGIE,EAAkB,kBAAMT,EAAYQ,KAI3CR,EAAc,SAACU,GAEnB,IADA,IAAIC,EAAM,GACJA,EAAID,OAASA,GAAO,CACtB,IAAIE,EAAeC,KAAKC,MAAMD,KAAKE,SAASL,GAAU,EACnDC,EAAIK,QAAQJ,IAAiB,IAEhCD,EAAIA,EAAID,QAAUE,GAEtB,OAAOD,GAGIM,EAAY,SAAChB,EAAOiB,GAE/B,GAAIA,EAAKC,WAAaD,EAAKE,WAAaC,EAAapB,GACnD,OAAO,KAIT,IAAMqB,EAAcrB,EAAMsB,KAAK,SAAAC,GAAC,OAAIA,EAAEL,YACtC,YAAmBM,IAAhBH,EAEMrB,EAAMyB,IAAI,SAAAF,GAAC,OAAIA,EAAEnB,QAAUa,EAAKb,MAAQsB,OAAOC,OAAO,GAAIJ,EAAI,CAACL,WAAW,EAAMC,WAAW,IAAUI,IAG3GF,EAAYhB,OAASY,EAAKZ,KAEpBL,EAAMyB,IAAI,SAAAF,GAAC,OAAIA,EAAElB,OAASY,EAAKZ,KAAOqB,OAAOC,OAAO,GAAIJ,EAAI,CAACL,WAAW,EAAOC,WAAW,IAASI,IAIrGvB,EAAMyB,IAAI,SAAAF,GAAC,OAAIA,EAAEnB,QAAUa,EAAKb,MAAQsB,OAAOC,OAAO,GAAIJ,EAAI,CAACL,WAAW,EAAMC,WAAW,IAAUI,KAGjGH,EAAe,SAACpB,GAAD,OAAuE,IAA5DA,EAAM4B,OAAO,SAACL,GAAD,OAAOA,EAAEL,YAAcK,EAAEJ,YAAWV,QCrD3EoB,EAAoB,oBACpBC,EAAW,WACXC,EAAa,aACbC,EAAa,aAEbC,EAAY,iBAAO,CAACC,KAAML,EAAmBM,QAAS3B,MACtD4B,EAAY,iBAAO,CAACF,KAAMF,IAC1BK,EAAU,SAACC,GAAD,MAAW,CAACJ,KAAMJ,EAAUQ,SAEtCtB,EAAY,SAAAC,GAAI,OAAI,SAACsB,EAAUC,GACvCA,IAAWC,WAAWC,OAASzB,EAAKE,WAAaF,EAAKC,YAKzDqB,EAAS,CAACL,KAAMH,EAAYI,QAAQlB,IAChCuB,IAAWC,WAAWC,OAExBC,WAAW,WACTJ,EAASH,MACR,QCvBMQ,EAAc,cAEdC,EAAa,SAACxC,GAAD,MAAW,CAAC6B,KAAMU,EAAaT,QAAS9B,ICFrDyC,EAAmB,mBACnBC,EAAoB,oBAEpBC,EAAiB,iBAAO,CAACd,KAAMY,IAC/BG,EAAkB,SAACC,GAAD,MAAoB,CAAChB,KAAMa,EAAmBZ,QAASe,qECCzEC,EAAiB,CAJH,SACC,UACH,gDCIZC,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAA1B,OAAA4B,EAAA,EAAA5B,CAAA6B,KAAAH,GAAA1B,OAAA8B,EAAA,EAAA9B,CAAA6B,KAAA7B,OAAA+B,EAAA,EAAA/B,CAAA0B,GAAAM,MAAAH,KAAAI,YAAA,OAAAjC,OAAAkC,EAAA,EAAAlC,CAAA0B,EAAAC,GAAA3B,OAAAmC,EAAA,EAAAnC,CAAA0B,EAAA,EAAAU,IAAA,SAAAC,MAAA,WACW,IAAAC,EAAAT,KACDU,GAAcV,KAAKW,MAAMlE,MAAMsB,KAAK,SAAAC,GAAC,OAAKA,EAAEJ,YAClD,OACEgD,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOC,qBACrBL,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOvF,iBNJzBmF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,uFACAF,EAAAC,EAAAC,cAAA,0FACAF,EAAAC,EAAAC,cAAA,6EACAF,EAAAC,EAAAC,cAAA,0EACAF,EAAAC,EAAAC,cAAA,+DACAF,EAAAC,EAAAC,cAAA,uEACAF,EAAAC,EAAAC,cAAA,wEACAF,EAAAC,EAAAC,cAAA,wKACAF,EAAAC,EAAAC,cAAA,kGMJAJ,GACAE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO9F,UAAvB,cAIF0F,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOE,oBACrBN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQC,KAAK,UAAUC,QAAS,kBAAMZ,EAAKE,MAAMW,WAAW5C,eAD9D,gBAAA6C,OAEmBvB,KAAKW,MAAMa,YAC5BZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,QAAS1B,KAAKW,MAAM7B,QAAS6C,MAAM,WAAWC,MAAO,CAACC,UAAU,OACtEC,SAAU,kBAAMrB,EAAKE,MAAMW,WAAWxC,cAE1C8B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOxF,oBAAvB,gBACEoF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOe,YACnB/B,KAAKW,MAAMlE,OAAS,IAAIyB,IAAI,SAAAR,GAAI,OAChCkD,EAAAC,EAAAC,cAACkB,EAAD7D,OAAAC,OAAA,CACEmC,IAAK7C,EAAKb,MACViC,QAAS2B,EAAKE,MAAM7B,QACpBuC,QAAU,kBAAKZ,EAAKE,MAAMW,WAAW7D,UAAUC,KAC3CA,MANV,iCAhBJ,gCAJNmC,EAAA,CAAgCoC,IAAMC,WAoChCC,EAAa,SAACxB,GAClB,IAAMyB,EAAWzB,EAAM/C,WAAa+C,EAAMhD,WAAagD,EAAM7B,QACvDuD,EAAS,GAAAd,OAAMP,IAAOsB,SAAb,KAAAf,OAAyBZ,EAAMhD,UAAYqD,IAAOuB,QAAU5B,EAAM/C,UAAYoD,IAAOwB,QAAU,IAE9G,OACE5B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOyB,WAAYpB,QAASV,EAAMU,SAC/Ce,GACCxB,EAAAC,EAAAC,cAAA,OAAKC,UAAWsB,GACdzB,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,CAAMA,KAAM/B,EAAM7D,KAAO6F,SAAU,mBC9B7C,IAKiBC,GALWC,YAd5B,SAAyBC,GACrB,OAAO3E,OAAA4E,EAAA,EAAA5E,CAAA,GACF2E,EAAM5D,aAIb,SAA4BF,GAC1B,MAAO,CACLsC,WAAY0B,YAAmBC,EAAWjE,KAMpB6D,CAGxBhD,WCpBSqD,GAAW,ECDxB,IAOaC,GAAb,WACE,SAAAA,EAAYC,GAAKjF,OAAA4B,EAAA,EAAA5B,CAAA6B,KAAAmD,GACfnD,KAAKqD,MAAQD,EACbpD,KAAKsD,MAAQ,GACbtD,KAAK5D,KAAO8G,GAJhB,OAAA/E,OAAAmC,EAAA,EAAAnC,CAAAgF,EAAA,EAAA5C,IAAA,UAAAC,MAAA,SAOU+C,GACFvD,KAAKwD,WACPxD,KAAKsD,MAAM1G,KAAK2G,GAChBvD,KAAKyD,UAELzD,KAAKwD,SDjBgB,ICiBLxD,KAAKqD,OAAyBrD,KAAK5D,OAAS8G,GAClC,IAAtBlD,KAAKsD,MAAMpG,ODpBC,ICqBZ8C,KAAK5D,MAAyC,IAAtB4D,KAAKsD,MAAMpG,UAd7C,CAAAqD,IAAA,UAAAC,MAAA,WAoBKR,KAAK5D,KAAyB,KAAlB4D,KAAKsD,MAAM,GD3BN,EC6BdtD,KAAKsD,MAAM,GAAKtD,KAAKsD,MAAM,KAAO,GD9BrB,EC8BkCJ,OAtBvDC,EAAA,GA2BaO,GAAe,SAACC,EAAgBC,GAC3C,IAAIC,EAASF,EAAeG,QACxBC,EAAYC,GAAaH,GAC1BE,GACDA,EAAUE,QAAQL,GAIpB,IADA,IAAIM,EAAQ,EACJxH,EAAI,EAAGA,EAAI,GAAIA,IAAI,CACzB,IAAMyH,EAAKC,GAAWP,EAAOnH,GAAGmH,EAAOnH,EAAE,GAAGmH,EAAOnH,EAAE,IACrDmH,EAAOnH,GAAG2H,MAAQF,EAClBD,GAASC,EACTN,EAAOnH,GAAGL,WAAa6H,EAIzB,OAAOL,GAIIG,GAAe,SAACH,GAAD,OAAaA,GAAU,IAAI9F,KAAK,SAAAuG,GAAC,OAAKA,EAAEd,YAOvDe,GAAc,kBAAMC,MAAMC,KAAK,CAACvH,OAAQ,IAAK,SAACwH,EAAGC,GAAJ,OAAU,IAAIxB,GAAMwB,QA8GxEP,GAAa,SAACQ,EAAIC,EAAIC,GAC1B,GAAGF,EAAGpB,SACJ,OAAOoB,EAAGxI,MACR,KD9KgB,ECgLd,OAAO,GAtCM,SAACwI,EAAIC,EAAIC,GAC5B,ODzIyB,ICyItBF,EAAGvB,MACGuB,EAAGtB,MAAM,GAAKsB,EAAGtB,MAAM,GDzIN,IC4IvBsB,EAAGvB,MD/Ic,ICiJfwB,EAAGzI,KAEG,GAAKyI,EAAGvB,MAAM,GAGhBuB,EAAGvB,MAAM,GAAKuB,EAAGvB,MAAM,GDtJZ,ICyJjBuB,EAAGzI,KACG0I,EAAK,GAAKA,EAAGxB,MAAM,GAAK,EAG1BuB,EAAGvB,MAAM,GAAKuB,EAAGvB,MAAM,GAmBZyB,CAAaH,EAAIC,EAAIC,GACnC,KDlLe,ECoLb,OAAO,GAlBE,SAACF,EAAIC,GACpB,ODhKyB,ICgKtBD,EAAGvB,MAEGuB,EAAGtB,MAAM,GAGXuB,GAAMA,EAAGvB,MAAMpG,OAAS,EAAI2H,EAAGvB,MAAM,QAAKrF,EAY/B+G,CAASJ,EAAGC,GAC1B,QACE,OAAOD,EAAGtB,MAAM,GAAKsB,EAAGtB,MAAM,GAIpC,OAAO2B,KCtLIC,GAAW,SAACvE,GACvB,ID8DwB0C,EC9DlB8B,EAAU,GAAA5D,OAAMP,YAAN,KAAAO,OFFS,IEEgBZ,EAAM0C,MAAwBrC,SAAe,GAAtE,MAAAO,OAA6EZ,EAAMyE,UAAYpE,UAAgB,IAC7H,OACEJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWoE,GACdvE,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAQ,OAAKP,eAAL,KAAAO,OAA4BZ,EAAMyE,UAAkC,GAAtBpE,kBACzDL,EAAM0C,MAAQ,GAEjBzC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,aACdJ,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAQ,OAAKP,YAAL,KAAAO,OFTG,IESqBZ,EAAM0C,MAAwBrC,aAAmB,KFTtE,KCgEDqC,ECtDH1C,GDuDZ0C,OAAyBA,EAAMC,MAAMpG,OAAS,EDnEnC,ICoEXmG,EAAMjH,KApEG,IAoEgD,IAAnBiH,EAAMC,MAAM,GAlErC,IAkEkED,EAAMC,MAAM,GAG7F,ICzDC1C,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAQ,OAAKP,YAAL,KAAAO,OAAwBP,UD4DvB,SAACqC,GACxB,OAA0B,IAAvBA,EAAMC,MAAMpG,OACN,GD1EgB,IC4EtBmG,EAAMA,MD/EU,ICgFXA,EAAMjH,KA9EG,IA+EM,KAAnBiH,EAAMC,MAAM,GAhFE,IAiFK,IAAnBD,EAAMC,MAAM,GA/EM,IAgFlBD,EAAMC,MAAM,GDlFI,ICoFXD,EAAMjH,KApFG,IAoFgD,IAAnBiH,EAAMC,MAAM,GAlFrC,IAkFkED,EAAMC,MAAM,GCrEzF+B,CAAU1E,IAEbC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,GAAAQ,OAAKP,YAAL,KAAAO,OAAwBP,UDuEvB,SAACqC,GACxB,GAA0B,IAAvBA,EAAMC,MAAMpG,OACb,MAAO,GAET,GD1FyB,IC0FtBmG,EAAMA,MACP,OAAOA,EAAMjH,MACX,QACE,MAAO,GACT,KDhGgB,ECiGd,OAA0B,KAAnBiH,EAAMC,MAAM,GAjGP,IAkGVD,EAAMC,MAAM,GAAKD,EAAMC,MAAM,KAAO,GAjG3B,IAkGU,IAAnBD,EAAMC,MAAM,GAjGE,IAiG2BD,EAAMC,MAAM,GACzD,KDrGe,ECsGb,OAA0B,KAAnBD,EAAMC,MAAM,GArGP,IAqGiCD,EAAMC,MAAM,QAG7D,OAAOD,EAAMjH,MACX,QACE,OAA0B,IAAnBiH,EAAMC,MAAM,GAxGH,IAwGgCD,EAAMC,MAAM,GAC9D,KD3GgB,EC4Gd,MAAO,GACT,KD9Ge,EC+Gb,MA7GW,KCiBNgC,CAAU3E,KAGjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,gBACZL,EAAM6C,UAAY+B,MAAM5E,EAAMtE,YAAc,GAAKsE,EAAMtE,uBCnBpDmJ,GAAa,SAAC7E,GACzB,IAAM0C,EAAQ1C,EAAM0C,MACdoC,EAAOjB,MAAMC,KAAK,CAACvH,OF+GE,SAACmG,GAC5B,OAAIA,EAGsB,IAAvBA,EAAMC,MAAMpG,OACN,GDvHgB,ICyHtBmG,EAAMA,MACmB,IAAvBA,EAAMC,MAAMpG,OACa,KAAnBmG,EAAMC,MAAM,GAAY,GAAK,GAAKD,EAAMC,MAAM,GD7HrC,ICiIXD,EAAMjH,KACU,KAAnBiH,EAAMC,MAAM,GAAY,GAAK,GAAKD,EAAMC,MAAM,GDnIjC,ICoIbD,EAAMjH,KAAiB,GAAK,KAG3B,GAAKiH,EAAMC,MAAM,GAhBf,EEjHwB3D,CAAc0D,GAAS,GAAI,SAACqB,EAAGC,GAAJ,OAAUA,MACnDzG,IAAI,SAAAwH,GAAC,OAAI9E,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEC,KAAMsE,EACNnF,IAAKmF,EACLrE,QAAS,kBAAMV,EAAMsD,QAAQyB,QAG3D,OACE9E,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,cACZL,EAAMzF,UACJ0F,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,aAAhB,eAIDL,EAAMzF,UACT0F,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,oBACdJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,UAAhB,SAAAO,OACW8B,EAAMA,MAAQ,EADzB,WAAA9B,OACoC8B,EAAMC,MAAMpG,OAAS,EADzD,OAGA0D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,gBACb,0CAEHJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,aACbyE,gBCtBAE,GAAb,SAAA7F,GAAA,SAAA6F,IAAA,OAAAxH,OAAA4B,EAAA,EAAA5B,CAAA6B,KAAA2F,GAAAxH,OAAA8B,EAAA,EAAA9B,CAAA6B,KAAA7B,OAAA+B,EAAA,EAAA/B,CAAAwH,GAAAxF,MAAAH,KAAAI,YAAA,OAAAjC,OAAAkC,EAAA,EAAAlC,CAAAwH,EAAA7F,GAAA3B,OAAAmC,EAAA,EAAAnC,CAAAwH,EAAA,EAAApF,IAAA,SAAAC,MAAA,WACW,IAAAC,EAAAT,KACD6D,EAAS7D,KAAKW,MAAMkD,OACpB3I,EHqDoB,SAAC2I,GAAD,OAAaA,GAAU,IAAI3G,SAA2C,IAAjC2G,ED7DxC,GC6D4DL,SGrDlEoC,CAAe/B,GAC1BgC,EAAK7B,GAAaH,GAExB,OACCjD,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,kBACbJ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,oBJRhBJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGgF,KAAK,0DAA0DC,OAAO,SAASC,IAAI,uBAAtF,iBAEJpF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGgF,KAAK,2CAA2CC,OAAO,SAASC,IAAI,uBAAvE,wBIIZpF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,iBACdJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACmF,GAAD,CAAY5C,MAAOwC,EAAI3K,SAAUA,EAAU+I,QAAS,SAACwB,GAAD,OAAUhF,EAAKE,MAAMW,WAAW5B,gBAAgB+F,OAEtG7E,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQC,KAAK,iBAAiBC,QAAS,kBAAMZ,EAAKE,MAAMW,WAAW7B,qBAErEmB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,uBACbkF,GAAkBrC,IAXxB,gCAPL8B,EAAA,CAAiC1D,IAAMC,WA0B/BgE,GAAoB,SAACrC,GACzB,IAAMgC,EAAK7B,GAAaH,GACxB,OAAQA,GAAU,IAAI3F,IAAI,SAAAoG,GAAC,OACvB1D,EAAAC,EAAAC,cAACqF,GAADhI,OAAAC,OAAA,CACEmC,IAAK+D,EAAEjB,MACP+B,UAAWS,GAAMA,EAAGxC,QAAUiB,EAAEjB,OAC5BiB,OCrBd,IAKiB8B,GALYvD,YAd7B,SAAyBC,GACrB,OAAO3E,OAAA4E,EAAA,EAAA5E,CAAA,GACF2E,EAAMuD,cAIb,SAA4BrH,GAC1B,MAAO,CACLsC,WAAY0B,YAAmBC,EAAWjE,KAMnB6D,CAGzB8C,ICXEW,kMACmB,IAAA7F,EAAAT,KACrB,OACEY,EAAAC,EAAAC,cAAA,WAEEyF,EAAyBrI,IAAI,SAAAsI,GAAC,OAC5B5F,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACEZ,IAAKiG,EACLzF,UAAW0F,IAAQC,QACnBC,OAAQlG,EAAKE,MAAMiG,eAAiBJ,EACpCpF,KAAMoF,EACNnF,QAAS,kBAAKZ,EAAKE,MAAMW,WAAWhC,WAAWkH,0CAQvD,OACE5F,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOrF,KAErBiF,EAAAC,EAAAC,cAAC+F,EAAA,EAAD,KACEjG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAaC,MAAOC,IAAUC,MAC5BrG,EAAAC,EAAAC,cAACoG,EAAA,EAAD,kBACAtG,EAAAC,EAAAC,cAACqG,EAAA,EAAD,MACCnH,KAAKoH,yBAGVxG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOzF,eTzCJ,WS0ChByE,KAAKW,MAAMiG,cACVhG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuG,GAAD,OT3Cc,YS8CjBrH,KAAKW,MAAMiG,cACVhG,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACwG,GAAD,OT/CY,SSkDdtH,KAAKW,MAAMiG,cACVhG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOpF,uBACtBgF,EAAAC,EAAAC,cAACyG,GAAD,CAAmBnG,KAAI,GAAAG,OAAKvB,KAAKW,MAAMiG,aAAhB,sCA1ClB1E,aAmDZsF,GAAoB,SAAC7G,GAAD,OACxBC,EAAAC,EAAAC,cAAA,WACEH,EAAMS,OAoBKyB,mBAZf,SAAyBC,GACvB,MAAO,CACL8D,aAAc9D,EAAM8D,eAIxB,SAA4B5H,GAC1B,MAAO,CACLsC,WAAY0B,YAAmBC,EAAWjE,KAI/B6D,CAGXyD,mBCrFK,SAASmB,GAAc3E,EAAO4E,GACnC,OAAOA,EAAO/I,MACZ,KAAKL,EACH,OAAOH,OAAOC,OAAO,GAAI0E,EAAO,CAACrG,MAAOF,EAAYmL,EAAO9I,SAAU4C,WAAY,EAAGrC,OAAO,IAC7F,KAAKV,EACH,IAAMkJ,EAAM7E,EAAMrG,MAAMyB,IAAI,SAAAF,GAAC,OAAIA,EAAEL,UAAYQ,OAAOC,OAAO,GAAIJ,EAAI,CAACL,WAAW,IAAUK,IAC3F,OAAQG,OAAOC,OAAO,GAAI0E,EAAO,CAACrG,MAAOkL,EAAKxI,OAAO,IACvD,KAAKX,EACH,IAAMoJ,EAAWnK,EAAUqF,EAAMrG,MAAOiL,EAAO9I,SACzCiJ,EAAyC,KAA3BD,GAAY,IAAI1K,OAC9B4K,EAAYjK,EAAa+J,GAC/B,OAAQC,EAAqB1J,OAAOC,OAAO,GAAI0E,EAAO,CAACrG,MAAOmL,EAAUpG,WAAYsB,EAAMtB,WAAa,EAAGrC,MAAO2I,IAA5FhF,EACvB,KAAKvE,EACH,OAAOJ,OAAOC,OAAO,GAAI0E,EAAO,CAAChE,SAAUgE,EAAMhE,UACnD,QACE,OAAOgE,GCNEiF,OARR,WAAuD,IAA9BjF,EAA8B1C,UAAAlD,OAAA,QAAAe,IAAAmC,UAAA,GAAAA,UAAA,GAAtB4H,GAAcN,EAAQtH,UAAAlD,OAAA,EAAAkD,UAAA,QAAAnC,EAC5D,MAAO,CACLiB,WAAYuI,GAAc3E,EAAM5D,WAAYwI,GAC5CrB,YCLC,SAAwBvD,EAAO4E,GACpC,OAAOA,EAAO/I,MACZ,KAAKY,EACH,OAAQpB,OAAOC,OAAO,GAAI0E,EAAO,CAACe,OAAQU,OAC5C,KAAK/E,EACH,OAAQrB,OAAOC,OAAO,GAAI0E,EAAO,CAACe,OAAQH,GAAaZ,EAAMe,OAAQ6D,EAAO9I,WAC9E,QACE,OAAOkE,GDFMmF,CAAenF,EAAMuD,YAAaqB,GAC/Cd,aAAcc,EAAO/I,OAASU,EAAcqI,EAAO9I,QAAUkE,EAAM8D,eEC5DoB,GAAe,CACxBpB,abVuB,SaWvB1H,WCVuB,CAAEJ,SAAQ,EAAOrC,MAAOF,EAAYU,KAAoBuE,WAAY,EAAGrC,OAAO,GDWrGkH,YEXuB,CAAExC,OAAQU,OCUjB2D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACL5H,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CAAUC,MJMY,WACxB,IAAIC,EAAa,CAACC,MAKlB,OAAOC,YAAYC,GAAUC,IAAe5I,WAAf,EAAmBwI,IIZ7BK,IACfpI,EAAAC,EAAAC,cAACmI,GAAD,OAEFC,SAASC,eAAe,SDgHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCE9HnBzO,EAAAC,QAAA,CAAkBgG,oBAAA,0BAAAc,UAAA,0BAAAvG,mBAAA,0BAAAN,SAAA,0BAAAO,gBAAA,0BAAAyF,mBAAA,0BAAAuB,WAAA,0BAAAF,QAAA,0BAAAC,QAAA,0BAAAF,SAAA","file":"static/js/main.f9b38ca0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameOver\":\"_1ys915Nw64OOC8qz5ovRW_\",\"frameBox\":\"oUzoJOe7mqptJ_fbd8ez9\",\"buttonContainer\":\"DsxI39HXsQRbZXnqATLfW\",\"pinSelector\":\"_39MCcYsm6eHO1vXbvBJ0cb\",\"title\":\"_1sP-3145k0u8eA9oZd8YuV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameContainer\":\"xQP8lOoTs1dkAuRSAbRvu\",\"gameBoardContainer\":\"_1hPKqsu_TF7aigP02O2s5a\",\"gameDescription\":\"_3b9emGkfD9fxjNK8yROpFv\",\"gameControls\":\"qsoKjb7GunGjBk6sBgynp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"_2XyUai4Nbw7tWe8ybs2pDF\",\"constructionContainer\":\"_3GqH5aLha_kCKzIRjcZiVA\",\"gameContainer\":\"_31H6O7fy05qgotoqEJLrrC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"frameBox\":\"_1rPS0KyrlHvxwTpTq4pvOS\",\"shadow\":\"_2QFKY5jTpdiE5i24K1HW1p\",\"tenth\":\"f0Yycf2RU-OgjmUMaCggK\",\"frameNumber\":\"_2pOZYc33o3ivje6Fzr40Pu\",\"unSelectedBk\":\"cZ4yeaPVmZ60Y8E3ik0I9\",\"markArea\":\"_1lukMqVcXRRiny4gOcNfb2\",\"scoreBox\":\"_2F2QibmVPix9t90ocFnR4t\",\"markTenth\":\"_22m0SYzjw8okPNWpPsbs0a\",\"mark\":\"_1fcol9SkiKe_fr46bVRjzB\",\"totalScore\":\"_1K826AncNPg9yy2lCJFKh4\"};","import React from 'react';\r\n\r\n\r\nexport const iconNames = ['time', 'grid', 'wrench','cog', 'flag','star','airplane','key','globe','dollar','flash','heart'];\r\nexport const ICON_COUNT = 12; \r\n\r\nexport function gameDescription() {\r\n    return (\r\n      <div>\r\n        <h3>Game Rules:</h3>\r\n        <ul>\r\n          <li>At the start of the game, the player is presented with 24 facedown cards.</li>\r\n          <li>On the reverse side of every card is an icon. There are twelve unique icons.</li>\r\n          <li>Play begins with the player clicking a card to reveal the icon.</li>\r\n          <li>The player then clicks another card to reveal a second icon.</li>\r\n          <li>If the icons match, the matched cards are grayed.</li>\r\n          <li>If the icons do not match, the cards are turned facedown.</li>\r\n          <li>The game continues until there are no cards left to match.</li>\r\n          <li>Alternatively, play can begin with the cards faceup (using the 'Show All' switch) then turning them facedown after you have memorized the icon positions. </li>\r\n          <li>The object of the game is to match all the icons using as few clicks as possible.</li>\r\n        </ul>\r\n      </div>);\r\n  };\r\n  \r\n  \r\n  \r\n  ","import {ICON_COUNT, iconNames} from './constants';\r\n\r\n// build the cards array. \r\nexport const createCards = (randomArray) => {\r\n  let cards = [];\r\n  for(let i = 0, n = 0; i < ICON_COUNT; i++){\r\n    cards.push({index:n++, name:iconNames[i]});\r\n    cards.push({index:n++, name:iconNames[i]});\r\n  }\r\n\r\n  // shuffle the cards based upon the input random array (comes from the function below )\r\n  let randomCards = [];\r\n  for(let i = 0; i < ICON_COUNT * 2; i++){\r\n    randomCards[randomArray[i] - 1] = cards[i];\r\n  }\r\n\r\n  return randomCards;\r\n}\r\n\r\nexport const randomCardArray = () => randomArray(ICON_COUNT * 2);\r\n\r\n// return array of unique numbers between 1 and length (inclusive) in random order\r\n// Used to shuffle the cards\r\nconst randomArray = (length) => {\r\n  let arr = []\r\n  while(arr.length < length){\r\n      var randomnumber = Math.floor(Math.random()*length) + 1;\r\n      if(arr.indexOf(randomnumber) > -1) \r\n        continue;\r\n      arr[arr.length] = randomnumber;\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport const clickCard = (cards, card) => {\r\n  // ignore click if card already turned over or there are two flipped cards already\r\n  if (card.isFlipped || card.isMatched || hasUnmatched(cards)) {\r\n    return null;\r\n  }\r\n\r\n  // is there another flipped card?\r\n  const flippedCard = cards.find(c => c.isFlipped);\r\n  if(flippedCard === undefined){\r\n    //  user clicked on the first card when looking for match, turn card face up\r\n    return cards.map(c => c.index === card.index ? Object.assign({}, c , {isFlipped: true, isMatched: false}) : c);\r\n  }\r\n\r\n  if(flippedCard.name === card.name) {\r\n    // user matched the card, set flipped and matched for those 2 matching cards\r\n    return cards.map(c => c.name === card.name ? Object.assign({}, c , {isFlipped: false, isMatched: true}) : c);\r\n  } \r\n  \r\n  // turn over the second card (no match)\r\n  return cards.map(c => c.index === card.index ? Object.assign({}, c , {isFlipped: true, isMatched: false}) : c);\r\n}\r\n\r\nexport const hasUnmatched = (cards) => cards.filter((c) => c.isFlipped && !c.isMatched).length === 2;\r\n\r\n","\r\nimport {randomCardArray} from '../components/MemoryGame/utils';\r\n\r\nexport const START_MEMORY_GAME = 'START_MEMORY_GAME';\r\nexport const SHOW_ALL = 'SHOW_ALL';\r\nexport const CLICK_CARD = 'CLICK_CARD';\r\nexport const UNFLIP_ALL = 'UNFLIP_ALL';\r\n\r\nexport const startGame = () => ({type: START_MEMORY_GAME, payload: randomCardArray()});\r\nexport const unflipAll = () => ({type: UNFLIP_ALL});\r\nexport const showAll = (show) => ({type: SHOW_ALL, show});\r\n\r\nexport const clickCard = card => (dispatch, getState) => {\r\n  if(getState().memoryGame.pause || card.isMatched || card.isFlipped) {\r\n    //  ignore clicks when paused or card is already turned over\r\n    return;\r\n  }\r\n\r\n  dispatch({type: CLICK_CARD, payload:card});\r\n  if (getState().memoryGame.pause) {\r\n    //  flip cards back over if unmatched but give user a little time to see they did not match\r\n    setTimeout(() => {\r\n      dispatch(unflipAll());\r\n    }, 700);    \r\n  }\r\n}\r\n\r\n","export const SELECT_GAME = 'SELECT_GAME';\r\n\r\nexport const selectGame = (name) => ({type: SELECT_GAME, payload: name});\r\n\r\n","export const NEW_BOWLING_GAME = 'NEW_BOWLING_GAME';\r\nexport const ROLL_BOWLING_BALL = 'ROLL_BOWLING_BALL';\r\n\r\nexport const newBowlingGame = () => ({type: NEW_BOWLING_GAME});\r\nexport const rollBowlingBall = (availablePins) => ({type: ROLL_BOWLING_BALL, payload: availablePins});\r\n\r\n","\r\nexport const MEMORY_GAME = 'Memory';\r\nexport const BOWLING_GAME = 'Bowling';\r\nexport const MAZE_GAME = 'Maze';\r\n\r\nexport const AvailableGames = [MEMORY_GAME, BOWLING_GAME, MAZE_GAME];","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\nimport { Icon, Button, Switch } from \"@blueprintjs/core\";\r\nimport {gameDescription} from './constants';\r\nimport styles from './MemoryGame.scss';\r\n\r\nexport class MemoryGame extends React.Component {\r\n  render() {\r\n    const isGameOver = !this.props.cards.find(c => !c.isMatched);\r\n    return (\r\n      <div className={styles.memoryGameContainer} >\r\n        <div className={styles.gameDescription}>\r\n          {gameDescription()}\r\n        </div> \r\n        { isGameOver &&\r\n          <div className={styles.gameOver}>\r\n            GAME OVER!\r\n          </div>\r\n        }\r\n        <div className={styles.memoryGameControls}>\r\n          <Button text=\"Restart\" onClick={() => this.props.appActions.startGame()} />\r\n          {`Click Count: ${this.props.clickCount}`}\r\n          <Switch checked={this.props.showAll} label=\"Show All\" style={{marginTop:'6px'}}\r\n            onChange={() => this.props.appActions.showAll()}/>\r\n        </div>\r\n        <div className={styles.gameBoardContainer}>\r\n          <div className={styles.gameBoard}>\r\n            {(this.props.cards || []).map(card => (\r\n              <MemoryCard \r\n                key={card.index}\r\n                showAll={this.props.showAll}\r\n                onClick={ ()=> this.props.appActions.clickCard(card)} \r\n                {...card} /> \r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst MemoryCard = (props) => {\r\n  const showIcon = props.isMatched || props.isFlipped || props.showAll;\r\n  const iconClass = `${styles.cardIcon} ${props.isFlipped ? styles.flipped : props.isMatched ? styles.matched : ''}`;\r\n\r\n  return (\r\n    <div className={styles.memoryCard} onClick={props.onClick}>\r\n      {showIcon &&\r\n        <div className={iconClass} >\r\n          <Icon icon={props.name}  iconSize={'calc(6vmin)'}  />\r\n        </div>\r\n      }\r\n    </div>\r\n    )\r\n};\r\n\r\nMemoryGame.propTypes = {\r\n  showAll: PropTypes.bool,\r\n  cards: PropTypes.array,\r\n  onClick: PropTypes.func,\r\n  unflipAll: PropTypes.func\r\n};\r\n\r\nexport default MemoryGame;\r\n","\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport * as myActions from \"../actions/memoryGame.js\";\r\nimport {MemoryGame} from \"../components/MemoryGame/MemoryGame.js\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n      ...state.memoryGame\r\n    };\r\n  }\r\n  \r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      appActions: bindActionCreators(myActions, dispatch)\r\n    };\r\n  }\r\n\r\n\r\n  \r\nconst MemoryGameContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(MemoryGame)\r\n  \r\n  export default MemoryGameContainer;\r\n  \r\n  \r\n  ","import React from 'react';\r\n\r\nexport const SPARE = 1;\r\nexport const STRIKE = 2;\r\nexport const UNMARKED = 0;\r\nexport const TENTH_FRAME = 9;\r\nexport const NINETH_FRAME = 8;\r\n\r\nexport function gameDescription() {\r\n    return (\r\n        <div>\r\n            <h3>Game Rules:</h3>\r\n            <ul>\r\n                <li>\r\n                    <a href=\"https://www.bowl.com/Welcome/Welcome_Home/Keeping_Score\" target=\"_blank\" rel=\"noopener noreferrer\">How to score</a>\r\n                </li>\r\n                <li>\r\n                    <a href=\"https://www.pba.com/Resources/Bowling101\" target=\"_blank\" rel=\"noopener noreferrer\">Rules of bowling</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n","\r\nimport {UNMARKED, TENTH_FRAME, NINETH_FRAME, STRIKE, SPARE} from './constants.js';\r\n\r\nconst STRIKE_CHAR = 'X';\r\nconst SPARE_CHAR = '/';\r\nconst GUTTERBALL_CHAR = '-';\r\n\r\n\r\n// Frame class represents a single frame as displayed on the bowling scorecard\r\n// There will be ten of these per game\r\nexport class Frame {\r\n  constructor(num){\r\n    this.frame = num;\r\n    this.rolls = [];\r\n    this.mark = UNMARKED;\r\n  }\r\n  \r\n  addRoll(r) {\r\n    if(!this.complete) {\r\n      this.rolls.push(r);\r\n      this.setMark();  \r\n      \r\n      this.complete = this.frame === TENTH_FRAME && this.mark !== UNMARKED\r\n        ? this.rolls.length === 3\r\n        : this.mark === STRIKE || this.rolls.length === 2; \r\n    }\r\n  }\r\n  \r\n   // mark based on first two rolls.  \r\n   setMark() {\r\n     this.mark = this.rolls[0] === 10\r\n      ? STRIKE\r\n      : this.rolls[0] + this.rolls[1] === 10 ? SPARE : UNMARKED;\r\n   }\r\n}\r\n\r\n\r\nexport const updateFrames = (framesToUpdate, roll) => {\r\n  let frames = framesToUpdate.slice();\r\n  let thisFrame = currentFrame(frames);\r\n  if(thisFrame) {\r\n    thisFrame.addRoll(roll);\r\n  }\r\n \r\n  let total = 0;\r\n  for(let i = 0; i < 10; i++){\r\n    const fs = scoreFrame(frames[i],frames[i+1],frames[i+2]);\r\n    frames[i].score = fs;\r\n    total += fs;\r\n    frames[i].totalScore = total;\r\n  //  console.log(`count: ${i}, score:${fs}, total:${total}`, frames[i]);\r\n  }\r\n\r\n  return frames;\r\n}         \r\n\r\n\r\nexport const currentFrame = (frames) => (frames || []).find(f => !f.complete);\r\n\r\nexport const currentScore = (frames) => {\r\n  const f = frames.reverse().find(f => f.complete);\r\n  return f ? f.totalScore : frames[0].totalScore;\r\n} \r\n\r\nexport const emptyFrames = () => Array.from({length: 10}, (v, k) => new Frame(k++));\r\n\r\nexport const isGameComplete = (frames) => (frames || []).length && frames[TENTH_FRAME].complete === true;\r\n\r\n\r\nexport const scoreBox1 = (frame) => {\r\n  if(frame.frame === TENTH_FRAME && frame.rolls.length > 0) {\r\n    return frame.mark === STRIKE ? STRIKE_CHAR : frame.rolls[0] === 0 ? GUTTERBALL_CHAR : frame.rolls[0];\r\n  }\r\n\r\n  return '';\r\n}\r\n\r\nexport const scoreBox2 = (frame) => {\r\n  if(frame.rolls.length === 0)\r\n    return '';\r\n\r\n  if(frame.frame === TENTH_FRAME){\r\n   return frame.mark === SPARE ? SPARE_CHAR \r\n    : frame.rolls[1] === 10 ? STRIKE_CHAR \r\n    : frame.rolls[1] === 0  ? GUTTERBALL_CHAR \r\n    : frame.rolls[1]; \r\n  } else {\r\n    return frame.mark === STRIKE ? STRIKE_CHAR : frame.rolls[0] === 0 ? GUTTERBALL_CHAR : frame.rolls[0];\r\n  }\r\n}\r\n\r\nexport const scoreBox3 = (frame) => {\r\n  if(frame.rolls.length === 0)\r\n    return '';\r\n  \r\n  if(frame.frame === TENTH_FRAME) {\r\n    switch(frame.mark) {\r\n      default:\r\n        return '';\r\n      case STRIKE:\r\n        return frame.rolls[2] === 10 ? STRIKE_CHAR \r\n        : frame.rolls[1] + frame.rolls[2] === 10 ? SPARE_CHAR \r\n        : frame.rolls[2] === 0 ? GUTTERBALL_CHAR : frame.rolls[2];\r\n      case SPARE:\r\n        return frame.rolls[2] === 10 ? STRIKE_CHAR : frame.rolls[2] ;\r\n    }\r\n  } else {   \r\n    switch(frame.mark) {\r\n      default:\r\n        return frame.rolls[1] === 0 ? GUTTERBALL_CHAR : frame.rolls[1];\r\n      case STRIKE:\r\n        return '';\r\n      case SPARE:\r\n        return SPARE_CHAR;\r\n    }\r\n  }\r\n}\r\n\r\n// how many pins to display?\r\nexport const availablePins = (frame) => {\r\n  if(!frame)\r\n    return 0;\r\n\r\n  if(frame.rolls.length === 0)\r\n    return 10;\r\n  \r\n  if(frame.frame === TENTH_FRAME){\r\n    if(frame.rolls.length === 1) {\r\n      return frame.rolls[0] === 10 ? 10 : 10 - frame.rolls[0];\r\n    }\r\n    \r\n    // possible third roll in 10th frame\r\n    return frame.mark === STRIKE \r\n      ? frame.rolls[1] === 10 ? 10 : 10 - frame.rolls[1]\r\n      : frame.mark === SPARE ? 10 : null; \r\n  }\r\n  \r\n  return 10 - frame.rolls[0];\r\n}\r\n\r\n//  return the score from next two rolls when users rolls a strike\r\nconst nextTwoRolls = (f1, f2, f3) => {\r\n  if(f1.frame === TENTH_FRAME) {\r\n    return f1.rolls[1] + f1.rolls[2];\r\n  }\r\n  \r\n  if(f1.frame === NINETH_FRAME) {\r\n      // next to last frame\r\n    if(f2.mark === STRIKE) {\r\n      //  strike in last frame\r\n      return 10 + f2.rolls[1];\r\n    }\r\n    \r\n    return f2.rolls[0] + f2.rolls[1];\r\n  }\r\n  \r\n  if(f2.mark === STRIKE) {\r\n    return f3 ? 10 + f3.rolls[0] : 0;\r\n  }\r\n  \r\n  return f2.rolls[0] + f2.rolls[1];\r\n}\r\n\r\n//  return the score from next roll when user rolls a spare\r\nconst nextRoll = (f1, f2) => {\r\n  if(f1.frame === TENTH_FRAME) {\r\n      // last frame\r\n    return f1.rolls[2];\r\n  }\r\n  \r\n  return f2 && f2.rolls.length > 0 ? f2.rolls[0] : undefined; \r\n}\r\n\r\n//  return the score of frame f1\r\nconst scoreFrame = (f1, f2, f3) => {\r\n  if(f1.complete) {\r\n    switch(f1.mark) {\r\n      case STRIKE:\r\n        //  we rolled a strike\r\n        return 10 + nextTwoRolls(f1, f2, f3);\r\n      case SPARE:\r\n        //  we rolled a spare  \r\n        return 10 + nextRoll(f1,f2);\r\n      default:\r\n        return f1.rolls[0] + f1.rolls[1];\r\n    }  \r\n  }\r\n\r\n  return NaN;\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport * as styles from './FrameBox.scss';\r\nimport {TENTH_FRAME} from './constants.js';\r\nimport {scoreBox1, scoreBox2, scoreBox3} from './utils.js';\r\n\r\nexport const FrameBox = (props) => {\r\n  const frameClass = `${styles.frameBox} ${props.frame === TENTH_FRAME ? styles.tenth : ''}  ${props.isCurrent ? styles.shadow : ''}`;\r\n    return ( \r\n      <div className={frameClass} >\r\n        <div className={`${styles.frameNumber} ${!props.isCurrent ? styles.unSelectedBk : ''}`}>\r\n          {props.frame + 1}\r\n        </div>    \r\n        <div className={styles.markArea}>\r\n          <div className={`${styles.scoreBox} ${props.frame === TENTH_FRAME ? styles.markTenth : ''}`} >\r\n            {scoreBox1(props)} \r\n          </div>\r\n          <div className={`${styles.scoreBox} ${styles.mark}`}>\r\n            {scoreBox2(props)} \r\n          </div>\r\n          <div className={`${styles.scoreBox} ${styles.mark}`}>\r\n            {scoreBox3(props)} \r\n          </div>\r\n        </div>\r\n      <div className={styles.totalScore}>\r\n        {!props.complete || isNaN(props.totalScore) ? '' : props.totalScore}\r\n      </div>\r\n    </div>\r\n  )};\r\n\r\nexport default FrameBox;\r\n  \r\n\r\n  ","import React from 'react';\r\nimport { Button } from \"@blueprintjs/core\";\r\n\r\nimport * as styles from './BallRoller.scss';\r\nimport {availablePins} from './utils.js';\r\n\r\nexport const BallRoller = (props) => {\r\n  const frame = props.frame;\r\n  const pins = Array.from({length: availablePins(frame) + 1}, (v, k) => k++)\r\n                    .map(p => <Button \r\n                                text={p} \r\n                                key={p} \r\n                                onClick={() => props.addRoll(p)} \r\n                              /> );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      { props.gameOver &&\r\n          <div className={styles.gameOver}>\r\n            GAME OVER!\r\n          </div>\r\n      }\r\n      { !props.gameOver &&\r\n      <div className={styles.buttonContainer}>\r\n        <div className={styles.title}>\r\n         {`Frame ${frame.frame + 1}, Ball ${frame.rolls.length + 1}  `}   \r\n        </div>\r\n        <div>\r\n          <div className={styles.pinSelector}>\r\n            {'Click the number of pins to knock down'}\r\n          </div> \r\n          <div className={styles.frameBox} >\r\n            {pins}\r\n          </div>\r\n        </div>\r\n       </div>\r\n      }\r\n    </div>\r\n    )\r\n  };\r\n\r\nexport default BallRoller;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'; \r\n\r\nimport { Button } from \"@blueprintjs/core\";\r\nimport {FrameBox} from './FrameBox';\r\nimport {BallRoller} from './BallRoller'\r\nimport {isGameComplete, currentFrame } from './utils.js';\r\nimport {gameDescription} from './constants';\r\nimport * as styles from './BowlingGame.scss';\r\n\r\nexport class BowlingGame extends React.Component {\r\n  render() {\r\n    const frames = this.props.frames; \r\n    const gameOver = isGameComplete(frames);\r\n    const cf = currentFrame(frames);\r\n\r\n    return (\r\n     <div className={styles.gameContainer}>\r\n        <div className={styles.gameDescription}>\r\n          {gameDescription()}\r\n        </div> \r\n        <div className={styles.gameControls}>\r\n          <div>\r\n            <BallRoller frame={cf} gameOver={gameOver} addRoll={(pins) => this.props.appActions.rollBowlingBall(pins)} />\r\n          </div> \r\n          <Button text=\"Start new game\" onClick={() => this.props.appActions.newBowlingGame()} />\r\n        </div>\r\n        <div className={styles.gameBoardContainer}>\r\n          {buildFrameDisplay(frames)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n  // returns frame elements for rendering\r\n  const buildFrameDisplay = (frames) => {\r\n    const cf = currentFrame(frames);\r\n    return (frames || []).map(f => (\r\n        <FrameBox \r\n          key={f.frame}\r\n          isCurrent={cf && cf.frame === f.frame} \r\n          {...f} /> \r\n      )\r\n    );\r\n  }\r\n\r\n\r\nBowlingGame.propTypes = {\r\n  rolls: PropTypes.array,\r\n  rollBowlingBall: PropTypes.func,\r\n  newBowlingGame: PropTypes.func\r\n}\r\n\r\nexport default BowlingGame;\r\n","\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from \"react-redux\";\r\n\r\nimport * as myActions from \"../actions/bowlingGame.js\";\r\nimport {BowlingGame} from \"../components/BowlingGame/BowlingGame.js\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n      ...state.bowlingGame\r\n    };\r\n  }\r\n  \r\n  function mapDispatchToProps(dispatch) {\r\n    return {\r\n      appActions: bindActionCreators(myActions, dispatch)\r\n    };\r\n  }\r\n\r\n\r\n  \r\nconst BowlingGameContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n  )(BowlingGame)\r\n  \r\n  export default BowlingGameContainer;\r\n  \r\n  \r\n  ","import React, { Component } from 'react';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from 'prop-types'; \r\nimport { Button } from \"@blueprintjs/core\";\r\n\r\nimport * as myActions from \"./actions/index\";\r\nimport { Alignment, Classes, Navbar, NavbarDivider,  NavbarGroup,  NavbarHeading} from \"@blueprintjs/core\";\r\nimport styles from './App.scss';\r\nimport * as constants from './constants.js';\r\nimport MemoryGameContainer from './containers/memory.js';\r\nimport BowlingGameContainer from './containers/bowling.js';\r\n\r\nclass App extends Component {\r\n  gameSelectionButtons() {\r\n    return (\r\n      <div> \r\n      {\r\n        constants.AvailableGames.map(g => (\r\n          <Button \r\n            key={g}\r\n            className={Classes.MINIMAL} \r\n            active={this.props.selectedGame === g}\r\n            text={g} \r\n            onClick={()=> this.props.appActions.selectGame(g)} />\r\n        ))\r\n      }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.app}>\r\n    \r\n        <Navbar>\r\n          <NavbarGroup align={Alignment.LEFT}>\r\n            <NavbarHeading>Game Room</NavbarHeading>\r\n            <NavbarDivider />\r\n            {this.gameSelectionButtons()}\r\n          </NavbarGroup>\r\n        </Navbar>\r\n        <div className={styles.gameContainer}>\r\n          {this.props.selectedGame === constants.MEMORY_GAME &&\r\n            <div>\r\n              <MemoryGameContainer />\r\n            </div>\r\n          }\r\n          {this.props.selectedGame === constants.BOWLING_GAME &&\r\n            <div>\r\n             <BowlingGameContainer />\r\n            </div>\r\n          }\r\n          {this.props.selectedGame === constants.MAZE_GAME &&\r\n            <div className={styles.constructionContainer}>\r\n             <UnderConstruction text={`${this.props.selectedGame} is under construction`} />\r\n            </div>\r\n          } \r\n        </div>   \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst UnderConstruction = (props) => (\r\n  <div>\r\n   {props.text}\r\n  </div>\r\n);\r\n\r\nApp.propTypes = {\r\n  selectedGame: PropTypes.string\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    selectedGame: state.selectedGame\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    appActions: bindActionCreators(myActions, dispatch)\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n  )(App);\r\n\r\n","import {SHOW_ALL, CLICK_CARD, UNFLIP_ALL, START_MEMORY_GAME} from \"../actions/index\";\r\nimport {createCards, clickCard, hasUnmatched} from '../components/MemoryGame/utils';\r\n\r\n\r\n  export function memoryReducer(state, action) {\r\n    switch(action.type) {\r\n      case START_MEMORY_GAME:\r\n        return Object.assign({}, state, {cards: createCards(action.payload), clickCount: 0, pause: false}); \r\n      case UNFLIP_ALL:\r\n        const ufc = state.cards.map(c => c.isFlipped ? Object.assign({}, c , {isFlipped: false}) : c);\r\n        return  Object.assign({}, state, {cards: ufc, pause: false });\r\n      case CLICK_CARD:\r\n        const newCards = clickCard(state.cards, action.payload);\r\n        const hasChanged = (newCards || []).length !== 0;\r\n        const unmatched = hasUnmatched(newCards);\r\n        return !hasChanged ? state : Object.assign({}, state, {cards: newCards, clickCount: state.clickCount + 1, pause: unmatched});\r\n      case SHOW_ALL:\r\n        return Object.assign({}, state, {showAll: !state.showAll});\r\n      default: \r\n        return state;\r\n    }\r\n  }\r\n  \r\n  export default memoryReducer;\r\n","import {initialState} from '../store';\r\nimport { bowlingReducer } from \"./bowlingReducer\";\r\nimport { memoryReducer } from \"./memoryReducer\";\r\nimport {SELECT_GAME} from \"../actions/index\";\r\n\r\n  export function gameRoomReducer(state = initialState, action) {\r\n    return {\r\n      memoryGame: memoryReducer(state.memoryGame, action),\r\n      bowlingGame: bowlingReducer(state.bowlingGame, action),\r\n      selectedGame: action.type === SELECT_GAME ? action.payload : state.selectedGame\r\n    }\r\n  }\r\n  \r\n  export default gameRoomReducer;\r\n","import {ROLL_BOWLING_BALL, NEW_BOWLING_GAME} from \"../actions/index\";\r\nimport {updateFrames, emptyFrames} from '../components/BowlingGame/utils';\r\n\r\nexport function bowlingReducer(state, action) {\r\n  switch(action.type) {\r\n    case NEW_BOWLING_GAME:\r\n      return  Object.assign({}, state, {frames: emptyFrames()});\r\n    case ROLL_BOWLING_BALL:\r\n      return  Object.assign({}, state, {frames: updateFrames(state.frames, action.payload) });\r\n    default:\r\n      return state;\r\n  }\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\n\r\nimport * as memoryGame from './memory';\r\nimport * as bowlingGame from './bowling';\r\nimport * as appConstants from '../constants';\r\n\r\nimport reducer from \"../reducers\";\r\n\r\nexport const initialState = {\r\n    selectedGame: appConstants.MEMORY_GAME,\r\n    memoryGame: memoryGame.init(),\r\n    bowlingGame: bowlingGame.init()\r\n  };\r\n\r\nexport const buildStore = () => {\r\n  let middleware = [thunk];\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    middleware.push(createLogger())\r\n  }\r\n\r\n  return createStore(reducer,  applyMiddleware(...middleware));\r\n}","import {createCards, randomCardArray} from '../components/MemoryGame/utils';\r\n\r\nexport const init = () => ({ showAll:false, cards: createCards(randomCardArray()), clickCount: 0, pause: false});","import {emptyFrames} from '../components/BowlingGame/utils';\r\n\r\nexport const init = () => ({ frames: emptyFrames()});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport { buildStore } from './store'\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Provider store={buildStore()}>\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n  );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"memoryGameContainer\":\"_3wIMHO0AFRXP4HAsSuTPHC\",\"gameBoard\":\"_2u5AvPbyjBL2rF3Gmxzbwu\",\"gameBoardContainer\":\"_1a7InEzNh1KEvrfJH-0B0U\",\"gameOver\":\"_1PdXWdxlNA1XPaFOeEzfHW\",\"gameDescription\":\"_1WqQzen-4MDGC_-ExjFWNm\",\"memoryGameControls\":\"_18c6mgsvHUO71ixP9De5Ld\",\"memoryCard\":\"_2Vv87KuIWYpn8ism0Lb2l0\",\"flipped\":\"_1Tt6i4GWAZjhLcIkHlApLY\",\"matched\":\"_3TqVz0bWw-CpUy79J658uq\",\"cardIcon\":\"_2V0eVus6tVUoxqNVenBwF6\"};"],"sourceRoot":""}